/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Coordinador;
import VO.AlumnoVO;
import VO.DireccionVO;
import VO.RepresentanteVO;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author rosicesar
 */
public class frmInscripcion extends javax.swing.JFrame {

    private Coordinador coordinador;
    private final ImageIcon ICON_NO_PHOTO = new javax.swing.ImageIcon(getClass().getResource("/Recursos/no_photo2.png"));
    FileInputStream fis, fis1, fis2, fis3, fisCopia1, fisCopia2;
    int longitudBytes, longitudBytes1,longitudBytes2,longitudBytes3, longitudBytecopia1, longitudBytecopia2;
    private boolean ACTUALIZACION;

    /**
     * Creates new form Inscripcion
     */
    public frmInscripcion() {
        this.setlook();
        initComponents();
        ajustar(lblfoto, ICON_NO_PHOTO);
        ajustar(lblfoto1, ICON_NO_PHOTO);
        ajustar(lblfoto2, ICON_NO_PHOTO);
        ajustar(lblfoto3, ICON_NO_PHOTO);
    }

    public void setlook() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void ajustar(JLabel label, ImageIcon icon) {
        //esta funcion ajusta un icono(parametro) al tama√±o del label (parametro)
        Icon icono = new ImageIcon(icon.getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_DEFAULT));
        label.setIcon(icono);
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        frmBusqueda = new javax.swing.JFrame();
        jPanel12 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBusqueda = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        btnBorrar = new javax.swing.JButton();
        btnSalir1 = new javax.swing.JButton();
        btnSeleccion = new javax.swing.JButton();
        frmBusqueda1 = new javax.swing.JFrame();
        jPanel14 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        txtBusqueda1 = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblBusqueda1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        btnBorrar1 = new javax.swing.JButton();
        btnSalir2 = new javax.swing.JButton();
        btnSeleccion1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPnombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSnombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPapellido = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtSapellido = new javax.swing.JTextField();
        lblfoto = new javax.swing.JLabel();
        btnAgregarImagen = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        rbnFemenino = new javax.swing.JRadioButton();
        rbnMasculino = new javax.swing.JRadioButton();
        txtFecha = new datechooser.beans.DateChooserCombo();
        jLabel18 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbxTipoSangre = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        rbnSi = new javax.swing.JRadioButton();
        rbnNo = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEnfermedad = new javax.swing.JTextArea();
        jLabel48 = new javax.swing.JLabel();
        rbnASi = new javax.swing.JRadioButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        listAlergias = new javax.swing.JList<>();
        rbnANo = new javax.swing.JRadioButton();
        jLabel47 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        rbnIII = new javax.swing.JRadioButton();
        rbnMaternal = new javax.swing.JRadioButton();
        rbnI = new javax.swing.JRadioButton();
        rbnII = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        cbxCasa = new javax.swing.JComboBox<>();
        txtParroquia = new javax.swing.JTextField();
        txtNumCasa = new javax.swing.JTextField();
        txtCalle = new javax.swing.JTextField();
        txtSector = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxEstatus = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        lblUsuarioActvo = new javax.swing.JLabel();
        btnSiguiente = new javax.swing.JButton();
        btnBorrarA = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        chkPartidaNacimiento = new javax.swing.JCheckBox();
        chkFotoCarnet = new javax.swing.JCheckBox();
        chkFotoPostal = new javax.swing.JCheckBox();
        chkFotoFamiliar = new javax.swing.JCheckBox();
        chkCopiaCedula = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObservacion = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        cbxParentescoR1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtNombreR1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtOcupacionR1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtCedulaR1 = new javax.swing.JTextField();
        txtTelefonoR12 = new javax.swing.JTextField();
        txtEmpresaR1 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtDireccionR1 = new javax.swing.JTextArea();
        txtTelefonoR1 = new javax.swing.JTextField();
        txtApellidoR1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnAgregarImagen1 = new javax.swing.JButton();
        lblfoto1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        btnBorrarR = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDireccionR2 = new javax.swing.JTextArea();
        txtTelefonoR22 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtEmpresaR2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCedulaR2 = new javax.swing.JTextField();
        txtTelefonoR2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtApellidoR2 = new javax.swing.JTextField();
        txtOcupacionR2 = new javax.swing.JTextField();
        txtNombreR2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cbxParentescoR2 = new javax.swing.JComboBox<>();
        chkRepresentante = new javax.swing.JCheckBox();
        btnAgregarImagen2 = new javax.swing.JButton();
        lblfoto2 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtDireccionR3 = new javax.swing.JTextArea();
        txtTelefonoR32 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtEmpresaR3 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        txtCedulaR3 = new javax.swing.JTextField();
        txtTelefonoR3 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtApellidoR3 = new javax.swing.JTextField();
        txtOcupacionR3 = new javax.swing.JTextField();
        txtNombreR3 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        cbxParentescoR3 = new javax.swing.JComboBox<>();
        btnAgregarImagen3 = new javax.swing.JButton();
        lblfoto3 = new javax.swing.JLabel();
        rbnOtro = new javax.swing.JRadioButton();
        rbnR1 = new javax.swing.JRadioButton();
        rbnR2 = new javax.swing.JRadioButton();
        txtParentesco = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();

        frmBusqueda.setUndecorated(true);
        frmBusqueda.setSize(new java.awt.Dimension(470, 320));
        frmBusqueda.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setBackground(new java.awt.Color(69, 90, 100));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel52.setBackground(new java.awt.Color(2, 119, 189));
        jLabel52.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("Busqueda");
        jLabel52.setOpaque(true);
        jPanel12.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 450, 37));

        jPanel13.setBackground(new java.awt.Color(2, 119, 189));
        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51), new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51)));
        jPanel13.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel58.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel58.setText("Cedula Representante o Nombre Alumno");
        jPanel13.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 270, 30));

        txtBusqueda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });
        jPanel13.add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 150, 30));

        tblBusqueda.setBackground(new java.awt.Color(153, 204, 255));
        tblBusqueda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre y Apellido"
            }
        ));
        tblBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBusquedaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblBusquedaMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tblBusqueda);

        jPanel13.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 430, 150));

        btnBorrar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cleaner(1).png"))); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.setPreferredSize(new java.awt.Dimension(60, 23));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jPanel13.add(btnBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 130, 30));

        btnSalir1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnSalir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_exit24.png"))); // NOI18N
        btnSalir1.setText("Salir");
        btnSalir1.setPreferredSize(new java.awt.Dimension(60, 23));
        btnSalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir1ActionPerformed(evt);
            }
        });
        jPanel13.add(btnSalir1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 130, 30));

        btnSeleccion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnSeleccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_next24.png"))); // NOI18N
        btnSeleccion.setText("Seleccionar");
        btnSeleccion.setPreferredSize(new java.awt.Dimension(60, 23));
        btnSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionActionPerformed(evt);
            }
        });
        jPanel13.add(btnSeleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 130, 30));

        jPanel12.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 450, 250));

        frmBusqueda.getContentPane().add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 320));

        frmBusqueda1.setUndecorated(true);
        frmBusqueda1.setSize(new java.awt.Dimension(470, 320));
        frmBusqueda1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel14.setBackground(new java.awt.Color(69, 90, 100));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel54.setBackground(new java.awt.Color(2, 119, 189));
        jLabel54.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setText("Busqueda");
        jLabel54.setOpaque(true);
        jPanel14.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 450, 37));

        jPanel15.setBackground(new java.awt.Color(2, 119, 189));
        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51), new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51)));
        jPanel15.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel59.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 255, 255));
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel59.setText("Cedula Representante");
        jPanel15.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 30));

        txtBusqueda1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtBusqueda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusqueda1ActionPerformed(evt);
            }
        });
        txtBusqueda1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusqueda1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusqueda1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusqueda1KeyTyped(evt);
            }
        });
        jPanel15.add(txtBusqueda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 150, 30));

        tblBusqueda1.setBackground(new java.awt.Color(153, 204, 255));
        tblBusqueda1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblBusqueda1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre y Apellido"
            }
        ));
        tblBusqueda1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBusqueda1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblBusqueda1MouseEntered(evt);
            }
        });
        jScrollPane7.setViewportView(tblBusqueda1);

        jPanel15.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 430, 150));

        btnBorrar1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnBorrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cleaner(1).png"))); // NOI18N
        btnBorrar1.setText("Borrar");
        btnBorrar1.setPreferredSize(new java.awt.Dimension(60, 23));
        btnBorrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrar1ActionPerformed(evt);
            }
        });
        jPanel15.add(btnBorrar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 130, 30));

        btnSalir2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnSalir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_exit24.png"))); // NOI18N
        btnSalir2.setText("Salir");
        btnSalir2.setPreferredSize(new java.awt.Dimension(60, 23));
        btnSalir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir2ActionPerformed(evt);
            }
        });
        jPanel15.add(btnSalir2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 130, 30));

        btnSeleccion1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnSeleccion1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_next24.png"))); // NOI18N
        btnSeleccion1.setText("Seleccionar");
        btnSeleccion1.setPreferredSize(new java.awt.Dimension(60, 23));
        btnSeleccion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccion1ActionPerformed(evt);
            }
        });
        jPanel15.add(btnSeleccion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 130, 30));

        jPanel14.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 450, 250));

        frmBusqueda1.getContentPane().add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 320));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(1, 87, 155));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(69, 90, 100));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informacion del Alumno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(24, 119, 189));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Codigo");
        jPanel7.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 20));

        txtPnombre.setToolTipText("");
        txtPnombre.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtPnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPnombreKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPnombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPnombreKeyTyped(evt);
            }
        });
        jPanel7.add(txtPnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 100, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Segundo nombre");
        jPanel7.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 20));

        txtSnombre.setToolTipText("");
        txtSnombre.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtSnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSnombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSnombreKeyTyped(evt);
            }
        });
        jPanel7.add(txtSnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 100, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Primer apellido");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 20));

        txtPapellido.setToolTipText("");
        txtPapellido.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtPapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPapellidoActionPerformed(evt);
            }
        });
        txtPapellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPapellidoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPapellidoKeyTyped(evt);
            }
        });
        jPanel7.add(txtPapellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 100, -1));

        jLabel29.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Segundo apellido");
        jPanel7.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 20));

        txtSapellido.setToolTipText("");
        txtSapellido.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtSapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSapellidoActionPerformed(evt);
            }
        });
        txtSapellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSapellidoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSapellidoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSapellidoKeyTyped(evt);
            }
        });
        jPanel7.add(txtSapellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 100, -1));

        lblfoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel7.add(lblfoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 110, 110));

        btnAgregarImagen.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnAgregarImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_subir24.png"))); // NOI18N
        btnAgregarImagen.setText("Cargar");
        btnAgregarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarImagenActionPerformed(evt);
            }
        });
        jPanel7.add(btnAgregarImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 110, 30));

        jPanel8.setBackground(new java.awt.Color(24, 119, 189));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sexo");
        jPanel8.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 300, 20));

        rbnFemenino.setBackground(new java.awt.Color(69, 90, 100));
        buttonGroup1.add(rbnFemenino);
        rbnFemenino.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnFemenino.setForeground(new java.awt.Color(255, 255, 255));
        rbnFemenino.setSelected(true);
        rbnFemenino.setText("Femenino");
        rbnFemenino.setOpaque(false);
        rbnFemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnFemeninoActionPerformed(evt);
            }
        });
        jPanel8.add(rbnFemenino, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, 20));

        rbnMasculino.setBackground(new java.awt.Color(69, 90, 100));
        buttonGroup1.add(rbnMasculino);
        rbnMasculino.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnMasculino.setForeground(new java.awt.Color(255, 255, 255));
        rbnMasculino.setText("Masculino");
        rbnMasculino.setOpaque(false);
        jPanel8.add(rbnMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, -1, 20));

        txtFecha.setFieldFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 11));
        txtFecha.setMinDate(new java.util.GregorianCalendar(2000, 0, 1));
        txtFecha.setCurrentNavigateIndex(0);
        txtFecha.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
        txtFecha.addCursorMoveListener(new datechooser.events.CursorMoveListener() {
            public void onCursorMove(datechooser.events.CursorMoveEvent evt) {
                txtFechaOnCursorMove(evt);
            }
        });
        txtFecha.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                txtFechaOnSelectionChange(evt);
            }
        });
        txtFecha.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                txtFechaOnCommit(evt);
            }
        });
        jPanel8.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, -1, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/chica(1).png"))); // NOI18N
        jPanel8.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/chico(1).png"))); // NOI18N
        jPanel8.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel44.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Grupo Escolar");
        jPanel8.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 110, -1));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/tipo-de-sangre.png"))); // NOI18N
        jPanel8.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tipo de Sangre");
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, 20));

        cbxTipoSangre.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cbxTipoSangre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "O-", "O+", "A-", "A+", "B-", "B+", "AB-", "AB+" }));
        jPanel8.add(cbxTipoSangre, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 70, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Padece de enfermedades");
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, 20));

        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/drogas.png"))); // NOI18N
        jPanel8.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        rbnSi.setBackground(new java.awt.Color(69, 90, 100));
        buttonGroup2.add(rbnSi);
        rbnSi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnSi.setForeground(new java.awt.Color(255, 255, 255));
        rbnSi.setText("Si");
        rbnSi.setOpaque(false);
        rbnSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnSiActionPerformed(evt);
            }
        });
        jPanel8.add(rbnSi, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, -1, -1));

        rbnNo.setBackground(new java.awt.Color(69, 90, 100));
        buttonGroup2.add(rbnNo);
        rbnNo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnNo.setForeground(new java.awt.Color(255, 255, 255));
        rbnNo.setSelected(true);
        rbnNo.setText("No");
        rbnNo.setOpaque(false);
        rbnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnNoActionPerformed(evt);
            }
        });
        jPanel8.add(rbnNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, -1, -1));

        txtEnfermedad.setColumns(20);
        txtEnfermedad.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtEnfermedad.setLineWrap(true);
        txtEnfermedad.setRows(5);
        txtEnfermedad.setEnabled(false);
        txtEnfermedad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEnfermedadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEnfermedadKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtEnfermedad);

        jPanel8.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 290, 40));

        jLabel48.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Alergias");
        jPanel8.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, 20));

        rbnASi.setBackground(new java.awt.Color(69, 90, 100));
        buttonGroup4.add(rbnASi);
        rbnASi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnASi.setForeground(new java.awt.Color(255, 255, 255));
        rbnASi.setText("Si");
        rbnASi.setOpaque(false);
        rbnASi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnASiActionPerformed(evt);
            }
        });
        jPanel8.add(rbnASi, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, -1, 20));

        listAlergias.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Anafilaxis", "Asma", "Dermatitis de Contacto", "Eczema (dermatitis at√≥pica)", "Alergias alimentos", "Fiebre de heno", "Urticaria", "Alergias a medicamentos", "Penicilina", "Analg√©sicos", "Aspirina", "Ibuprofeno", "Naproxeno s√≥dico", "Gluten" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listAlergias.setEnabled(false);
        jScrollPane8.setViewportView(listAlergias);

        jPanel8.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 170, 80));

        rbnANo.setBackground(new java.awt.Color(69, 90, 100));
        buttonGroup4.add(rbnANo);
        rbnANo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnANo.setForeground(new java.awt.Color(255, 255, 255));
        rbnANo.setSelected(true);
        rbnANo.setText("No");
        rbnANo.setOpaque(false);
        rbnANo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnANoActionPerformed(evt);
            }
        });
        jPanel8.add(rbnANo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, -1, 20));

        jLabel47.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Pulse la tecla Ctrl para multiple seleccion");
        jPanel8.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, -1, 20));

        jLabel53.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("Fecha de Nacimiento");
        jPanel8.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 170, -1));

        buttonGroup5.add(rbnIII);
        rbnIII.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnIII.setForeground(new java.awt.Color(255, 255, 255));
        rbnIII.setText("III");
        rbnIII.setEnabled(false);
        rbnIII.setOpaque(false);
        jPanel8.add(rbnIII, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 40, -1));

        buttonGroup5.add(rbnMaternal);
        rbnMaternal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnMaternal.setForeground(new java.awt.Color(255, 255, 255));
        rbnMaternal.setSelected(true);
        rbnMaternal.setText("Maternal");
        rbnMaternal.setEnabled(false);
        rbnMaternal.setOpaque(false);
        rbnMaternal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnMaternalActionPerformed(evt);
            }
        });
        jPanel8.add(rbnMaternal, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        buttonGroup5.add(rbnI);
        rbnI.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnI.setForeground(new java.awt.Color(255, 255, 255));
        rbnI.setText("I");
        rbnI.setEnabled(false);
        rbnI.setOpaque(false);
        jPanel8.add(rbnI, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        buttonGroup5.add(rbnII);
        rbnII.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rbnII.setForeground(new java.awt.Color(255, 255, 255));
        rbnII.setText("II");
        rbnII.setEnabled(false);
        rbnII.setOpaque(false);
        jPanel8.add(rbnII, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 40, -1));

        jPanel7.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 370, 330));

        jPanel10.setBackground(new java.awt.Color(24, 119, 189));
        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Casa:");
        jPanel10.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 50, 20));

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/firmar.png"))); // NOI18N
        jPanel10.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel45.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Direccion");
        jPanel10.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 70, 20));

        jLabel46.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Calle/Avenida:");
        jPanel10.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 100, 20));

        jLabel49.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("N¬∫ Casa:");
        jPanel10.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 70, 20));

        jLabel50.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("Sector:");
        jPanel10.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 60, 20));

        jLabel51.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Parroquia:");
        jPanel10.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 80, 20));

        cbxCasa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Propia", "Alquilada" }));
        jPanel10.add(cbxCasa, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 100, -1));

        txtParroquia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParroquiaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtParroquiaKeyTyped(evt);
            }
        });
        jPanel10.add(txtParroquia, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 100, -1));

        txtNumCasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumCasaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumCasaKeyTyped(evt);
            }
        });
        jPanel10.add(txtNumCasa, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 110, -1));

        txtCalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCalleKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalleKeyTyped(evt);
            }
        });
        jPanel10.add(txtCalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 250, -1));

        txtSector.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSectorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSectorKeyTyped(evt);
            }
        });
        jPanel10.add(txtSector, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 110, -1));

        jPanel7.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 380, 150));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Estatus");
        jPanel7.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 120, 20));

        cbxEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DISPONIBLE", "NO DISPONIBLE" }));
        jPanel7.add(cbxEstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 100, -1));

        jLabel28.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Primer nombre");
        jPanel7.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        lblCodigo.setToolTipText("");
        lblCodigo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCodigo.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        lblCodigo.setEnabled(false);
        lblCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lblCodigoKeyTyped(evt);
            }
        });
        jPanel7.add(lblCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 100, 20));

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 810, 350));

        btnSalir.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_exit24.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 460, 120, 30));

        lblUsuarioActvo.setText("usuario activo");
        lblUsuarioActvo.setName("lblUsuarioActivo"); // NOI18N
        jPanel2.add(lblUsuarioActvo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, 120, -1));

        btnSiguiente.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_next24.png"))); // NOI18N
        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, 120, 30));

        btnBorrarA.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnBorrarA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cleaner(1).png"))); // NOI18N
        btnBorrarA.setText("Limpiar");
        btnBorrarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarAActionPerformed(evt);
            }
        });
        jPanel2.add(btnBorrarA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 460, 120, 30));

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("INSCRIPCION DE ALUMNOS PERIODO:");
        lblTitulo.setName("lbl"); // NOI18N
        jPanel2.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 1000, 30));

        txtCodigo.setName("txtCodigoAlumno"); // NOI18N
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });
        jPanel2.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, 130, 30));

        btnBuscar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_buscar24.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setName("btnBuscar"); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel2.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, -1, -1));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Codigo alumno");
        jLabel30.setName("lbl"); // NOI18N
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 150, 30));

        jTabbedPane1.addTab("Datos Alumno", new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_graduado.png")), jPanel2); // NOI18N

        jPanel3.setBackground(new java.awt.Color(69, 90, 100));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informacion de Representantes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(24, 119, 189));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Requisitos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chkPartidaNacimiento.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chkPartidaNacimiento.setForeground(new java.awt.Color(255, 255, 255));
        chkPartidaNacimiento.setText("Partida de Nacimiento");
        chkPartidaNacimiento.setOpaque(false);
        jPanel4.add(chkPartidaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        chkFotoCarnet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chkFotoCarnet.setForeground(new java.awt.Color(255, 255, 255));
        chkFotoCarnet.setText("4 Fotos Tipo Carnet ");
        chkFotoCarnet.setOpaque(false);
        jPanel4.add(chkFotoCarnet, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        chkFotoPostal.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chkFotoPostal.setForeground(new java.awt.Color(255, 255, 255));
        chkFotoPostal.setText("1 Foto Tipo Postal");
        chkFotoPostal.setOpaque(false);
        chkFotoPostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFotoPostalActionPerformed(evt);
            }
        });
        jPanel4.add(chkFotoPostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 130, -1));

        chkFotoFamiliar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chkFotoFamiliar.setForeground(new java.awt.Color(255, 255, 255));
        chkFotoFamiliar.setText("Foto Familiar");
        chkFotoFamiliar.setOpaque(false);
        chkFotoFamiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFotoFamiliarActionPerformed(evt);
            }
        });
        jPanel4.add(chkFotoFamiliar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 120, -1));

        chkCopiaCedula.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chkCopiaCedula.setForeground(new java.awt.Color(255, 255, 255));
        chkCopiaCedula.setText("Copia de Cedula de los Padres");
        chkCopiaCedula.setOpaque(false);
        jPanel4.add(chkCopiaCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 210, -1));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 340, 150));

        jPanel5.setBackground(new java.awt.Color(24, 119, 189));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtObservacion.setColumns(20);
        txtObservacion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtObservacion.setLineWrap(true);
        txtObservacion.setRows(5);
        txtObservacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtObservacionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtObservacionKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtObservacion);

        jPanel5.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 320, 120));

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 350, 340, 150));

        jPanel1.setBackground(new java.awt.Color(24, 119, 189));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Parentesco");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, -1));

        cbxParentescoR1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cbxParentescoR1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Madre", "Padre", "Tio", "Tia", "Abuela", "Abuelo", "Hermano", "Hermana" }));
        cbxParentescoR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxParentescoR1ActionPerformed(evt);
            }
        });
        jPanel1.add(cbxParentescoR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 100, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Nombre");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        txtNombreR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreR1ActionPerformed(evt);
            }
        });
        txtNombreR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreR1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreR1KeyTyped(evt);
            }
        });
        jPanel1.add(txtNombreR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 100, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Ocupacion");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 60, -1));

        txtOcupacionR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOcupacionR1ActionPerformed(evt);
            }
        });
        txtOcupacionR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOcupacionR1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOcupacionR1KeyTyped(evt);
            }
        });
        jPanel1.add(txtOcupacionR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 100, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Empresa");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 50, -1));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Telefono empresa");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        jLabel26.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("cedula");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 50, -1));

        txtCedulaR1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaR1FocusLost(evt);
            }
        });
        txtCedulaR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaR1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaR1KeyTyped(evt);
            }
        });
        jPanel1.add(txtCedulaR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 70, -1));

        txtTelefonoR12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoR12ActionPerformed(evt);
            }
        });
        txtTelefonoR12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoR12KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoR12KeyTyped(evt);
            }
        });
        jPanel1.add(txtTelefonoR12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 100, -1));

        txtEmpresaR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpresaR1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmpresaR1KeyTyped(evt);
            }
        });
        jPanel1.add(txtEmpresaR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 100, -1));

        txtDireccionR1.setColumns(20);
        txtDireccionR1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtDireccionR1.setRows(5);
        txtDireccionR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionR1KeyTyped(evt);
            }
        });
        jScrollPane5.setViewportView(txtDireccionR1);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 220, 60));

        txtTelefonoR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoR1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoR1KeyTyped(evt);
            }
        });
        jPanel1.add(txtTelefonoR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 100, -1));

        txtApellidoR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoR1ActionPerformed(evt);
            }
        });
        txtApellidoR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoR1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoR1KeyTyped(evt);
            }
        });
        jPanel1.add(txtApellidoR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 100, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Apellido");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 50, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Telefono");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 60, -1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Direccion");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        btnAgregarImagen1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAgregarImagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_subir24.png"))); // NOI18N
        btnAgregarImagen1.setText("Cargar");
        btnAgregarImagen1.setToolTipText("");
        btnAgregarImagen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarImagen1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarImagen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 110, 30));

        lblfoto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfoto1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(lblfoto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 110, 120));

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 20, 20));

        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 110, -1));

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 340, 320));

        btnAtras.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_back24.png"))); // NOI18N
        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        jPanel3.add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 460, 100, 30));

        btnBorrarR.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBorrarR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cleaner(1).png"))); // NOI18N
        btnBorrarR.setText("Limpiar");
        btnBorrarR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarRActionPerformed(evt);
            }
        });
        jPanel3.add(btnBorrarR, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 460, 110, 30));

        jPanel6.setBackground(new java.awt.Color(24, 119, 189));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDireccionR2.setColumns(20);
        txtDireccionR2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtDireccionR2.setRows(5);
        txtDireccionR2.setEnabled(false);
        txtDireccionR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionR2KeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(txtDireccionR2);

        jPanel6.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 190, 60));

        txtTelefonoR22.setEnabled(false);
        txtTelefonoR22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoR22KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoR22KeyTyped(evt);
            }
        });
        jPanel6.add(txtTelefonoR22, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 90, -1));

        jLabel24.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Telefono empresa");
        jPanel6.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 120, -1));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Empresa");
        jPanel6.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 60, -1));

        txtEmpresaR2.setEnabled(false);
        txtEmpresaR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpresaR2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmpresaR2KeyTyped(evt);
            }
        });
        jPanel6.add(txtEmpresaR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 90, -1));

        jLabel23.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Direccion");
        jPanel6.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 250, 60, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("cedula");
        jPanel6.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 40, 50, -1));

        txtCedulaR2.setEnabled(false);
        txtCedulaR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaR2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaR2KeyTyped(evt);
            }
        });
        jPanel6.add(txtCedulaR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 90, -1));

        txtTelefonoR2.setEnabled(false);
        txtTelefonoR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoR2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoR2KeyTyped(evt);
            }
        });
        jPanel6.add(txtTelefonoR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 90, -1));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Telefono");
        jPanel6.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 80, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Apellido");
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 70, -1));

        txtApellidoR2.setEnabled(false);
        txtApellidoR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoR2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoR2KeyTyped(evt);
            }
        });
        jPanel6.add(txtApellidoR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 90, -1));

        txtOcupacionR2.setEnabled(false);
        txtOcupacionR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOcupacionR2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOcupacionR2KeyTyped(evt);
            }
        });
        jPanel6.add(txtOcupacionR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 90, -1));

        txtNombreR2.setEnabled(false);
        txtNombreR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreR2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreR2KeyTyped(evt);
            }
        });
        jPanel6.add(txtNombreR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 90, -1));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Nombre");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 60, -1));

        jLabel21.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Ocupacion");
        jPanel6.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 70, -1));

        jLabel25.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Parentesco");
        jPanel6.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 10, 70, -1));

        cbxParentescoR2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Madre", "Padre", "Tio", "Tia", "Abuela", "Abuelo", "Hermano", "Hermana" }));
        cbxParentescoR2.setEnabled(false);
        jPanel6.add(cbxParentescoR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 90, -1));

        chkRepresentante.setBackground(new java.awt.Color(2, 119, 189));
        chkRepresentante.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        chkRepresentante.setForeground(new java.awt.Color(255, 255, 255));
        chkRepresentante.setText("Habilitar Representante");
        chkRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRepresentanteActionPerformed(evt);
            }
        });
        jPanel6.add(chkRepresentante, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        btnAgregarImagen2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAgregarImagen2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_subir24.png"))); // NOI18N
        btnAgregarImagen2.setText("Cargar");
        btnAgregarImagen2.setEnabled(false);
        btnAgregarImagen2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarImagen2ActionPerformed(evt);
            }
        });
        jPanel6.add(btnAgregarImagen2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 110, 30));

        lblfoto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfoto2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel6.add(lblfoto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 110, 120));

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 340, 320));

        jPanel11.setBackground(new java.awt.Color(24, 119, 189));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDireccionR3.setColumns(20);
        txtDireccionR3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtDireccionR3.setRows(5);
        txtDireccionR3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionR3KeyTyped(evt);
            }
        });
        jScrollPane6.setViewportView(txtDireccionR3);

        jPanel11.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 190, 60));

        txtTelefonoR32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoR32KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoR32KeyTyped(evt);
            }
        });
        jPanel11.add(txtTelefonoR32, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 90, -1));

        jLabel31.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Telefono empresa");
        jPanel11.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 120, -1));

        jLabel32.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Empresa");
        jPanel11.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtEmpresaR3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpresaR3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmpresaR3KeyTyped(evt);
            }
        });
        jPanel11.add(txtEmpresaR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 90, -1));

        jLabel33.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Direccion");
        jPanel11.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        jLabel34.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("cedula");
        jPanel11.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        txtCedulaR3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaR3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaR3KeyTyped(evt);
            }
        });
        jPanel11.add(txtCedulaR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 90, -1));

        txtTelefonoR3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoR3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoR3KeyTyped(evt);
            }
        });
        jPanel11.add(txtTelefonoR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 90, -1));

        jLabel35.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Telefono");
        jPanel11.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 70, -1));

        jLabel36.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Apellido");
        jPanel11.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 60, -1));

        txtApellidoR3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoR3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoR3KeyTyped(evt);
            }
        });
        jPanel11.add(txtApellidoR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 90, -1));

        txtOcupacionR3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOcupacionR3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOcupacionR3KeyTyped(evt);
            }
        });
        jPanel11.add(txtOcupacionR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 90, -1));

        txtNombreR3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreR3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreR3KeyTyped(evt);
            }
        });
        jPanel11.add(txtNombreR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 90, -1));

        jLabel37.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Nombre");
        jPanel11.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 50, -1));

        jLabel38.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Ocupacion");
        jPanel11.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 70, -1));

        cbxParentescoR3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        cbxParentescoR3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Madre", "Padre", "Tio", "Tia", "Abuela", "Abuelo", "Hermano", "Hermana", "Otro" }));
        cbxParentescoR3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxParentescoR3ActionPerformed(evt);
            }
        });
        jPanel11.add(cbxParentescoR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 90, -1));

        btnAgregarImagen3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAgregarImagen3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_subir24.png"))); // NOI18N
        btnAgregarImagen3.setText("Cargar");
        btnAgregarImagen3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarImagen3ActionPerformed(evt);
            }
        });
        jPanel11.add(btnAgregarImagen3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 110, 30));

        lblfoto3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfoto3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel11.add(lblfoto3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 110, 120));

        rbnOtro.setBackground(new java.awt.Color(2, 119, 189));
        buttonGroup3.add(rbnOtro);
        rbnOtro.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rbnOtro.setForeground(new java.awt.Color(255, 255, 255));
        rbnOtro.setSelected(true);
        rbnOtro.setText("Otro");
        rbnOtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnOtroActionPerformed(evt);
            }
        });
        jPanel11.add(rbnOtro, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, -1, -1));

        rbnR1.setBackground(new java.awt.Color(2, 119, 189));
        buttonGroup3.add(rbnR1);
        rbnR1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rbnR1.setForeground(new java.awt.Color(255, 255, 255));
        rbnR1.setText("R1");
        rbnR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnR1ActionPerformed(evt);
            }
        });
        jPanel11.add(rbnR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, -1));

        rbnR2.setBackground(new java.awt.Color(2, 119, 189));
        buttonGroup3.add(rbnR2);
        rbnR2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rbnR2.setForeground(new java.awt.Color(255, 255, 255));
        rbnR2.setText("R2");
        rbnR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnR2ActionPerformed(evt);
            }
        });
        jPanel11.add(rbnR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, -1, -1));

        txtParentesco.setEnabled(false);
        txtParentesco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParentescoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtParentescoKeyTyped(evt);
            }
        });
        jPanel11.add(txtParentesco, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 130, 20));

        jLabel55.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setText("Parentesco");
        jPanel11.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel3.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 340, 320));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_guardar24.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel3.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 460, -1, 30));

        jTabbedPane1.addTab("Datos Representante", new javax.swing.ImageIcon(getClass().getResource("/Recursos/icon_familia.png")), jPanel3); // NOI18N

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbnFemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnFemeninoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbnFemeninoActionPerformed

    private void chkFotoFamiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFotoFamiliarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFotoFamiliarActionPerformed

    private void txtPapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPapellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPapellidoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String fecha = txtFecha.getText();
        fecha = fecha.replace('/', '-');
        //verifico si se trata de nueva inscripcion o reinscripcion
        if (ACTUALIZACION) {
            reinscripcion(fecha);
        } else {
            nuevoIngreso(fecha);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void rbnSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnSiActionPerformed
        txtEnfermedad.setText("");
        txtEnfermedad.setEnabled(true);
    }//GEN-LAST:event_rbnSiActionPerformed

    private void rbnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnNoActionPerformed
        txtEnfermedad.setText("");
        txtEnfermedad.setEnabled(false);
    }//GEN-LAST:event_rbnNoActionPerformed

    private void chkFotoPostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFotoPostalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFotoPostalActionPerformed

    private void txtPnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPnombreKeyTyped
        validacionSoloLetras(evt, 15, txtPnombre.getText().length());
    }//GEN-LAST:event_txtPnombreKeyTyped

    private void txtSnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSnombreKeyTyped
        validacionSoloLetras(evt, 15, txtSnombre.getText().length());
    }//GEN-LAST:event_txtSnombreKeyTyped

    private void txtPapellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPapellidoKeyTyped
        validacionSoloLetras(evt, 15, txtPapellido.getText().length());
    }//GEN-LAST:event_txtPapellidoKeyTyped

    private void txtSapellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSapellidoKeyTyped
        validacionSoloLetras(evt, 15, txtSapellido.getText().length());
    }//GEN-LAST:event_txtSapellidoKeyTyped

    private void txtEnfermedadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnfermedadKeyTyped
        validacionLimite(evt, 250, txtEnfermedad.getText().length());
    }//GEN-LAST:event_txtEnfermedadKeyTyped

    private void txtPnombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPnombreKeyPressed

    }//GEN-LAST:event_txtPnombreKeyPressed

    private void txtNombreR1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreR1KeyTyped
        validacionSoloLetras(evt, 15, txtNombreR1.getText().length());
    }//GEN-LAST:event_txtNombreR1KeyTyped

    private void txtApellidoR1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoR1KeyTyped
        validacionSoloLetras(evt, 15, txtApellidoR1.getText().length());
    }//GEN-LAST:event_txtApellidoR1KeyTyped

    private void txtOcupacionR1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionR1KeyTyped
        validacionSoloLetrasEspacio(evt, 30, txtOcupacionR1.getText().length());
    }//GEN-LAST:event_txtOcupacionR1KeyTyped

    private void txtTelefonoR1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR1KeyTyped
        validacionTelefono(evt, 11, txtTelefonoR1.getText().length());
    }//GEN-LAST:event_txtTelefonoR1KeyTyped

    private void txtEmpresaR1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaR1KeyTyped
        validacionSoloLetrasEspacio(evt, 30, txtEmpresaR1.getText().length());
    }//GEN-LAST:event_txtEmpresaR1KeyTyped

    private void txtTelefonoR12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR12KeyTyped
        validacionTelefono(evt, 11, txtTelefonoR12.getText().length());
    }//GEN-LAST:event_txtTelefonoR12KeyTyped

    private void txtCedulaR1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaR1KeyTyped
        validacionSoloNumeros(evt, 8, txtCedulaR1.getText().length());
    }//GEN-LAST:event_txtCedulaR1KeyTyped

    private void txtDireccionR1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionR1KeyTyped
        validacionLimite(evt, 300, txtDireccionR1.getText().length());
    }//GEN-LAST:event_txtDireccionR1KeyTyped

    private void txtNombreR2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreR2KeyTyped
        validacionSoloLetras(evt, 15, txtNombreR2.getText().length());
    }//GEN-LAST:event_txtNombreR2KeyTyped

    private void txtApellidoR2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoR2KeyTyped
        validacionSoloLetras(evt, 15, txtApellidoR2.getText().length());
    }//GEN-LAST:event_txtApellidoR2KeyTyped

    private void txtOcupacionR2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionR2KeyTyped
        validacionSoloLetrasEspacio(evt, 30, txtOcupacionR2.getText().length());
    }//GEN-LAST:event_txtOcupacionR2KeyTyped

    private void txtTelefonoR2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR2KeyTyped
        validacionTelefono(evt, 11, txtTelefonoR2.getText().length());
    }//GEN-LAST:event_txtTelefonoR2KeyTyped

    private void txtEmpresaR2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaR2KeyTyped
        validacionSoloLetrasEspacio(evt, 30, txtEmpresaR2.getText().length());
    }//GEN-LAST:event_txtEmpresaR2KeyTyped

    private void txtDireccionR2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionR2KeyTyped
        validacionLimite(evt, 300, txtDireccionR2.getText().length());
    }//GEN-LAST:event_txtDireccionR2KeyTyped

    private void txtTelefonoR22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR22KeyTyped
        validacionTelefono(evt, 11, txtTelefonoR22.getText().length());
    }//GEN-LAST:event_txtTelefonoR22KeyTyped

    private void txtCedulaR2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaR2KeyTyped
        validacionSoloNumeros(evt, 8, txtCedulaR2.getText().length());
    }//GEN-LAST:event_txtCedulaR2KeyTyped

    private void txtObservacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObservacionKeyTyped
        validacionLimite(evt, 400, txtDireccionR2.getText().length());
    }//GEN-LAST:event_txtObservacionKeyTyped

    private void chkRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRepresentanteActionPerformed
        if (chkRepresentante.isSelected()) {
            activarRepresentante();
        } else {
            desactivarRepresentante();
        }
    }//GEN-LAST:event_chkRepresentanteActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        coordinador.getFrmMenu().setVisible(true);
        coordinador.getFrmMenu().setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        if (validacionCampoAlumno()) {
            if (comprobarEdad()) {
                    jTabbedPane1.setSelectedIndex(1); 
            }
        }else{
            coordinador.getLogica().mensajeError("Complete los campos faltantes de alumno");
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnBorrarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarAActionPerformed
        Object opciones[] = {"Si", "No"};
        int respuesta = JOptionPane.showOptionDialog(this, "¬øDeseea usted borrar los cambios realizados en alumno?", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones, "No");
        if (respuesta == 0) {
            Object opciones2[] = {"Si", "No"};
            int respuesta2 = JOptionPane.showOptionDialog(this, "¬øDesea usted tambien borrar datos del representante?", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones2, "Si");
            if (respuesta2 == 0) {
                borrarCampos();
            } 
            borrarAlumno();
            //lblCodigo.setText(String.valueOf(coordinador.llenarCodigoAlumno()));
            txtPnombre.setFocusable(true);
        }  
    }//GEN-LAST:event_btnBorrarAActionPerformed

    private void btnBorrarRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarRActionPerformed
        borrarRepresentante();
    }//GEN-LAST:event_btnBorrarRActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (!txtCodigo.getText().isEmpty()) {
            String codigo = txtCodigo.getText().trim();
            borrarCampos();
            txtCodigo.setText(codigo);
            AlumnoVO alumnoVO = coordinador.consultarAlumno(txtCodigo.getText().trim());
            if (alumnoVO.getPrimer_nombre() != null) {
                ACTUALIZACION = true;
                if (alumnoVO.isEstatus()) {
                    llenarCampos(alumnoVO);
                } else {
                   coordinador.getLogica().mensajeAdvertencia("Este alumno tiene estatus NO disponible,\nPor favor actualice pagos y notas para este alumno"); 
                }
            } else {
//                coordinador.getLogica().mensajeError("Codigo: "+txtCodigo.getText()+" no existe en la Base de Datos");
//                borrarCampos();
                    frmBusqueda.setLocationRelativeTo(this);
                    frmBusqueda.setVisible(true);
                  
            }
        } else {
            //coordinador.getLogica().mensajeAdvertencia("Ingrese un codigo");
            frmBusqueda.setLocationRelativeTo(this);
            frmBusqueda.setVisible(true);
        }


    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarImagenActionPerformed
        lblfoto.setIcon(null);
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG & PNG", "jpg", "png");
        j.setFileFilter(filtroImagen);
        j.setFileSelectionMode(JFileChooser.FILES_ONLY);//solo archivos y no carpetas
        int estado = j.showOpenDialog(null);
        if (estado == JFileChooser.APPROVE_OPTION) {
            try {
                fis = new FileInputStream(j.getSelectedFile());
                //necesitamos saber la cantidad de bytes

                this.longitudBytes = (int) j.getSelectedFile().length();
                try {
                    Image icono = ImageIO.read(j.getSelectedFile()).getScaledInstance(lblfoto.getWidth(), lblfoto.getHeight(), Image.SCALE_DEFAULT);
                    lblfoto.setIcon(new ImageIcon(icono));
                    lblfoto.updateUI();

                } catch (IOException ex) {
                   coordinador.getLogica().mensajeError("imagen: " + ex);
                }
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        } else {
            ajustar(lblfoto, ICON_NO_PHOTO);
        }
    }//GEN-LAST:event_btnAgregarImagenActionPerformed

    private void btnAgregarImagen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarImagen1ActionPerformed
        lblfoto1.setIcon(null);
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG & PNG", "jpg", "png");
        j.setFileFilter(filtroImagen);
        j.setFileSelectionMode(JFileChooser.FILES_ONLY);//solo archivos y no carpetas
        int estado = j.showOpenDialog(null);
        if (estado == JFileChooser.APPROVE_OPTION) {
            try {
                fis1 = new FileInputStream(j.getSelectedFile());
                fisCopia1 = new FileInputStream(j.getSelectedFile());
                //necesitamos saber la cantidad de bytes

                this.longitudBytes1 = (int) j.getSelectedFile().length();
                this.longitudBytecopia1 = (int) j.getSelectedFile().length();
                try {
                    Image icono = ImageIO.read(j.getSelectedFile()).getScaledInstance(lblfoto1.getWidth(), lblfoto1.getHeight(), Image.SCALE_DEFAULT);
                    lblfoto1.setIcon(new ImageIcon(icono));
                    lblfoto1.updateUI();

                } catch (IOException ex) {
                    coordinador.getLogica().mensajeError("imagen: " + ex);
                }
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        } else {
            ajustar(lblfoto1, ICON_NO_PHOTO);
        }
    }//GEN-LAST:event_btnAgregarImagen1ActionPerformed

    private void cbxParentescoR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxParentescoR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxParentescoR1ActionPerformed

    private void btnAgregarImagen2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarImagen2ActionPerformed
        lblfoto2.setIcon(null);
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG & PNG", "jpg", "png");
        j.setFileFilter(filtroImagen);
        j.setFileSelectionMode(JFileChooser.FILES_ONLY);//solo archivos y no carpetas
        int estado = j.showOpenDialog(null);
        if (estado == JFileChooser.APPROVE_OPTION) {
            try {
                fis2 = new FileInputStream(j.getSelectedFile());
                fisCopia2 = new FileInputStream(j.getSelectedFile());
                //necesitamos saber la cantidad de bytes

                this.longitudBytes2 = (int) j.getSelectedFile().length();
                this.longitudBytecopia2 = (int) j.getSelectedFile().length();
                try {
                    Image icono = ImageIO.read(j.getSelectedFile()).getScaledInstance(lblfoto2.getWidth(), lblfoto2.getHeight(), Image.SCALE_DEFAULT);
                    lblfoto2.setIcon(new ImageIcon(icono));
                    lblfoto2.updateUI();

                } catch (IOException ex) {
                    coordinador.getLogica().mensajeError("imagen: " + ex);
                }
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        } else {
            ajustar(lblfoto2, ICON_NO_PHOTO);
        }
    }//GEN-LAST:event_btnAgregarImagen2ActionPerformed

    private void txtDireccionR3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionR3KeyTyped
    validacionLimite(evt, 300, txtDireccionR3.getText().length());
    }//GEN-LAST:event_txtDireccionR3KeyTyped

    private void txtTelefonoR32KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR32KeyTyped
    validacionTelefono(evt, 11, txtTelefonoR32.getText().length());
    }//GEN-LAST:event_txtTelefonoR32KeyTyped

    private void txtEmpresaR3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaR3KeyTyped
    validacionSoloLetrasEspacio(evt, 30, txtEmpresaR3.getText().length());
    }//GEN-LAST:event_txtEmpresaR3KeyTyped

    private void txtCedulaR3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaR3KeyTyped
    validacionSoloNumeros(evt, 8, txtCedulaR3.getText().length());
    }//GEN-LAST:event_txtCedulaR3KeyTyped

    private void txtTelefonoR3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR3KeyTyped
    validacionTelefono(evt, 11, txtTelefonoR3.getText().length());
    }//GEN-LAST:event_txtTelefonoR3KeyTyped

    private void txtApellidoR3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoR3KeyTyped
    validacionSoloLetras(evt, 15, txtApellidoR1.getText().length());
    }//GEN-LAST:event_txtApellidoR3KeyTyped

    private void txtOcupacionR3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionR3KeyTyped
    validacionSoloLetrasEspacio(evt, 30, txtOcupacionR3.getText().length());
    }//GEN-LAST:event_txtOcupacionR3KeyTyped

    private void txtNombreR3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreR3KeyTyped
    validacionSoloLetras(evt, 15, txtNombreR3.getText().length());
    }//GEN-LAST:event_txtNombreR3KeyTyped

    private void btnAgregarImagen3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarImagen3ActionPerformed
        lblfoto3.setIcon(null);
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG & PNG", "jpg", "png");
        j.setFileFilter(filtroImagen);
        j.setFileSelectionMode(JFileChooser.FILES_ONLY);//solo archivos y no carpetas
        int estado = j.showOpenDialog(null);
        if (estado == JFileChooser.APPROVE_OPTION) {
            try {
                fis3 = new FileInputStream(j.getSelectedFile());
                //necesitamos saber la cantidad de bytes

                this.longitudBytes3 = (int) j.getSelectedFile().length();
                try {
                    Image icono = ImageIO.read(j.getSelectedFile()).getScaledInstance(lblfoto3.getWidth(), lblfoto3.getHeight(), Image.SCALE_DEFAULT);
                    lblfoto3.setIcon(new ImageIcon(icono));
                    lblfoto3.updateUI();

                } catch (IOException ex) {
                    coordinador.getLogica().mensajeError("imagen: " + ex);
                }
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        } else {
            ajustar(lblfoto3, ICON_NO_PHOTO);
        }
    }//GEN-LAST:event_btnAgregarImagen3ActionPerformed

    private void rbnOtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnOtroActionPerformed
        borrarRepresentante3();
        activarRepresentante3();
    }//GEN-LAST:event_rbnOtroActionPerformed

    private void rbnR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnR1ActionPerformed
        copiarDatosR1();
        desactivarRepresentante3();
    }//GEN-LAST:event_rbnR1ActionPerformed

    private void rbnR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnR2ActionPerformed
        copiarDatosR2();
        desactivarRepresentante3();
    }//GEN-LAST:event_rbnR2ActionPerformed

    private void txtApellidoR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoR1ActionPerformed

    private void txtTelefonoR12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoR12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoR12ActionPerformed

    private void txtSapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSapellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSapellidoActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        validacionSoloNumerosYGuion(evt, 12, txtCodigo.getText().length());
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        if (jTabbedPane1.getSelectedIndex() == 1) {
            if (validacionCampoAlumno()) {
                if (comprobarEdad()) {
                    jTabbedPane1.setSelectedIndex(1); 
                }
            } else {
                coordinador.getLogica().mensajeError("Complete los campos faltantes de alumno");
                jTabbedPane1.setSelectedIndex(0);
            }
        } 
//        if (jTabbedPane1.getSelectedIndex() == 0) {
//            if (validacionCampoRepresentante()) {
//                jTabbedPane1.setSelectedIndex(0);
//            } else {
//                coordinador.getLogica().mensajeError("Complete los campos de representantes");
//                jTabbedPane1.setSelectedIndex(1);
//            }
//        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void rbnASiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnASiActionPerformed
    listAlergias.setEnabled(true);
    }//GEN-LAST:event_rbnASiActionPerformed

    private void rbnANoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnANoActionPerformed
     listAlergias.setEnabled(false);
        List<String> listaAlergias = listAlergias.getSelectedValuesList();
        listAlergias.clearSelection();
    }//GEN-LAST:event_rbnANoActionPerformed

    private void lblCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblCodigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCodigoKeyPressed

    private void lblCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblCodigoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCodigoKeyTyped

    private void txtCedulaR1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaR1KeyReleased
    txtCedulaR1.setText(txtCedulaR1.getText().toUpperCase());
    }//GEN-LAST:event_txtCedulaR1KeyReleased

    private void txtCedulaR1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaR1FocusLost
        if (ACTUALIZACION) {
                    RepresentanteVO repre = coordinador.consultarRepresentante(txtCedulaR1.getText(), 1);
        if (repre.getCedula() != null) {
            ACTUALIZACION = true;
            txtCedulaR1.setText(repre.getCedula());
            txtNombreR1.setText(repre.getPrimer_nombre());
            txtApellidoR1.setText(repre.getPrimer_apellido());
            txtOcupacionR1.setText(repre.getOcupacion());
            txtTelefonoR1.setText(repre.getTelefono1());
            txtTelefonoR12.setText(repre.getTelefono2());
            txtEmpresaR1.setText(repre.getEmpresa());
            txtDireccionR1.setText(repre.getDireccion());
            if (repre.getFoto() == null) {
                ajustar(lblfoto1, ICON_NO_PHOTO);
            } else {
                ajustar(lblfoto1, repre.getFoto());
            }
            lblCodigo.setText(repre.getId_alumno());
        }else{
            ACTUALIZACION = false;
            lblCodigo.setText(coordinador.llenarCodigoAlumno(txtCedulaR1.getText()));
        }
        } else {
            lblCodigo.setText(coordinador.llenarCodigoAlumno(txtCedulaR1.getText()));
        }
    }//GEN-LAST:event_txtCedulaR1FocusLost

    private void txtNombreR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreR1ActionPerformed

    private void txtOcupacionR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOcupacionR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOcupacionR1ActionPerformed

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void tblBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusquedaMouseClicked
/*        borrarCampos();
        AlumnoVO alumnoVO = coordinador.consultarAlumno(tblBusqueda.getValueAt(tblBusqueda.getSelectedRow(), 0).toString());
        llenarCampos(alumnoVO);*/
    }//GEN-LAST:event_tblBusquedaMouseClicked

    private void tblBusquedaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusquedaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblBusquedaMouseEntered

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        txtBusqueda.setText("");
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnSalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir1ActionPerformed
        txtBusqueda.setText("");
//        desactivarCampos();
        frmBusqueda.dispose();
    }//GEN-LAST:event_btnSalir1ActionPerformed

    private void btnSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionActionPerformed
        borrarCampos();
        if (tblBusqueda.getSelectedRow() != -1) {
            ACTUALIZACION = true;
            AlumnoVO alumnoVO = coordinador.consultarAlumno(tblBusqueda.getValueAt(tblBusqueda.getSelectedRow(), 0).toString());
            llenarCampos(alumnoVO);
            frmBusqueda.dispose();
        }else{
            coordinador.getLogica().mensajeError("Por favor seleccione un registro");
        }
    }//GEN-LAST:event_btnSeleccionActionPerformed

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed

    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
    tblBusqueda.setModel(coordinador.consultarAlumnosTabla(txtBusqueda.getText(), txtBusqueda.getText()));
    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void rbnMaternalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnMaternalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbnMaternalActionPerformed

    private void txtFechaOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_txtFechaOnSelectionChange


    }//GEN-LAST:event_txtFechaOnSelectionChange

    private void txtFechaOnCursorMove(datechooser.events.CursorMoveEvent evt) {//GEN-FIRST:event_txtFechaOnCursorMove

    }//GEN-LAST:event_txtFechaOnCursorMove

    private void txtFechaOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_txtFechaOnCommit
        int a√±oNacimiento = Integer.parseInt(txtFecha.getText().substring(6, 10));
        int a√±oActual = Integer.parseInt(coordinador.getFechaFormateada().substring(6, 10));
        int anio = a√±oActual - a√±oNacimiento;
        if (anio < 3) {
            buttonGroup5.setSelected(rbnMaternal.getModel(), true);
            rbnMaternal.setEnabled(false);
            rbnI.setEnabled(false);
            rbnII.setEnabled(false);
            rbnIII.setEnabled(false);
        } 
        if (anio >= 3) {
            buttonGroup5.setSelected(rbnMaternal.getModel(), true);
            rbnMaternal.setEnabled(true);
            rbnI.setEnabled(true);
            rbnII.setEnabled(false);
            rbnIII.setEnabled(false);
        }
        if (anio == 4) {
            buttonGroup5.setSelected(rbnI.getModel(), true);
            rbnMaternal.setEnabled(false);
            rbnI.setEnabled(true);
            rbnII.setEnabled(true);
            rbnIII.setEnabled(false);
        }
        if (anio == 5) {
            buttonGroup5.setSelected(rbnII.getModel(), true);
            rbnMaternal.setEnabled(false);
            rbnI.setEnabled(false);
            rbnII.setEnabled(true);
            rbnIII.setEnabled(true);
        }
        if (anio == 6) {
            buttonGroup5.setSelected(rbnIII.getModel(), true);
            rbnMaternal.setEnabled(false);
            rbnI.setEnabled(false);
            rbnII.setEnabled(false);
            rbnIII.setEnabled(true);
        }
        if (anio > 6) {
            buttonGroup5.setSelected(rbnIII.getModel(), true);
            rbnMaternal.setEnabled(false);
            rbnI.setEnabled(false);
            rbnII.setEnabled(false);
            rbnIII.setEnabled(false);
        }
    }//GEN-LAST:event_txtFechaOnCommit

    private void txtPnombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPnombreKeyReleased
        txtPnombre.setText(txtPnombre.getText().toUpperCase());
    }//GEN-LAST:event_txtPnombreKeyReleased

    private void txtBusqueda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusqueda1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusqueda1ActionPerformed

    private void txtBusqueda1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusqueda1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusqueda1KeyPressed

    private void txtBusqueda1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusqueda1KeyReleased
    tblBusqueda1.setModel(coordinador.consultarRepresentanteTabla(txtBusqueda1.getText()));
    }//GEN-LAST:event_txtBusqueda1KeyReleased

    private void txtBusqueda1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusqueda1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusqueda1KeyTyped

    private void tblBusqueda1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusqueda1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblBusqueda1MouseClicked

    private void tblBusqueda1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusqueda1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblBusqueda1MouseEntered

    private void btnBorrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrar1ActionPerformed
    txtBusqueda1.setText("");
    }//GEN-LAST:event_btnBorrar1ActionPerformed

    private void btnSalir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir2ActionPerformed
    txtBusqueda.setText("");
    frmBusqueda1.dispose();
    }//GEN-LAST:event_btnSalir2ActionPerformed

    private void btnSeleccion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccion1ActionPerformed
        borrarRepresentante();
        borrarRepresentante3();
        if (tblBusqueda1.getSelectedRow() != -1) {
            //RepresentanteVO representanteVO = coordinador.consultarRepresentantePorAlumno(tblBusqueda1.getValueAt(tblBusqueda1.getSelectedRow(), 0).toString(), 1);
            RepresentanteVO representanteVO = coordinador.consultarRepresentante(tblBusqueda1.getValueAt(tblBusqueda1.getSelectedRow(), 0).toString(), 1);
                if(representanteVO.getCedula()!=null){
                    txtCedulaR1.setText(representanteVO.getCedula());
                    txtNombreR1.setText(representanteVO.getPrimer_nombre());
                    txtApellidoR1.setText(representanteVO.getPrimer_apellido());
                    txtOcupacionR1.setText(representanteVO.getOcupacion());
                    txtTelefonoR1.setText(representanteVO.getTelefono1());
                    txtTelefonoR12.setText(representanteVO.getTelefono2());
                    txtEmpresaR1.setText(representanteVO.getEmpresa());
                    txtDireccionR1.setText(representanteVO.getDireccion());
                    //desabilito los campos para que no pueda cambiar nada
                    txtCedulaR1.setEnabled(false);
                    txtNombreR1.setEnabled(false);
                    txtApellidoR1.setEnabled(false);
                    txtOcupacionR1.setEnabled(false);
                    txtTelefonoR1.setEnabled(false);
                    txtTelefonoR12.setEnabled(false);
                    txtEmpresaR1.setEnabled(false);
                    txtDireccionR1.setEnabled(false);
                    btnAgregarImagen1.setEnabled(false);
                    if (representanteVO.getFoto() == null) {
                        ajustar(lblfoto1, ICON_NO_PHOTO);
                    } else {
                        ajustar(lblfoto1, representanteVO.getFoto());
                    }
                }
            lblCodigo.setText(coordinador.llenarCodigoAlumno(txtCedulaR1.getText()));
            frmBusqueda1.dispose();
        }else{
            coordinador.getLogica().mensajeError("Por favor seleccione un registro");
        }
    }//GEN-LAST:event_btnSeleccion1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            frmBusqueda1.setLocationRelativeTo(this);
            frmBusqueda1.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                    txtCedulaR1.setText("");
                    txtNombreR1.setText("");
                    txtApellidoR1.setText("");
                    txtOcupacionR1.setText("");
                    txtTelefonoR1.setText("");
                    txtTelefonoR12.setText("");
                    txtEmpresaR1.setText("");
                    txtDireccionR1.setText("");
                    //desabilito los campos para que no pueda cambiar nada
                    txtCedulaR1.setEnabled(true);
                    txtNombreR1.setEnabled(true);
                    txtApellidoR1.setEnabled(true);
                    txtOcupacionR1.setEnabled(true);
                    txtTelefonoR1.setEnabled(true);
                    txtTelefonoR12.setEnabled(true);
                    txtEmpresaR1.setEnabled(true);
                    txtDireccionR1.setEnabled(true);
                    btnAgregarImagen1.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtSnombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSnombreKeyReleased
    txtSnombre.setText(txtSnombre.getText().toUpperCase());
    }//GEN-LAST:event_txtSnombreKeyReleased

    private void txtPapellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPapellidoKeyReleased
    txtPapellido.setText(txtPapellido.getText().toUpperCase());
    }//GEN-LAST:event_txtPapellidoKeyReleased

    private void txtSapellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSapellidoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSapellidoKeyPressed

    private void txtSapellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSapellidoKeyReleased
    txtSapellido.setText(txtSapellido.getText().toUpperCase());
    }//GEN-LAST:event_txtSapellidoKeyReleased

    private void txtNumCasaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumCasaKeyTyped
    validacionSoloNumeros(evt, 4, txtNumCasa.getText().length());
    }//GEN-LAST:event_txtNumCasaKeyTyped

    private void txtNumCasaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumCasaKeyReleased
    txtNumCasa.setText(txtNumCasa.getText().toUpperCase());
    }//GEN-LAST:event_txtNumCasaKeyReleased

    private void txtCalleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyTyped
        validacionLimite(evt, 20, txtCalle.getText().length());
    }//GEN-LAST:event_txtCalleKeyTyped

    private void txtCalleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyReleased
    txtCalle.setText(txtCalle.getText().toUpperCase());
    }//GEN-LAST:event_txtCalleKeyReleased

    private void txtSectorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSectorKeyReleased
    txtSector.setText(txtSector.getText().toUpperCase());
    }//GEN-LAST:event_txtSectorKeyReleased

    private void txtSectorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSectorKeyTyped
        validacionLimite(evt, 15, txtSector.getText().length());
    }//GEN-LAST:event_txtSectorKeyTyped

    private void txtParroquiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParroquiaKeyTyped
        validacionLimite(evt, 15, txtParroquia.getText().length());
    }//GEN-LAST:event_txtParroquiaKeyTyped

    private void txtParroquiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParroquiaKeyReleased
    txtParroquia.setText(txtParroquia.getText().toUpperCase());
    }//GEN-LAST:event_txtParroquiaKeyReleased

    private void txtEnfermedadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnfermedadKeyReleased
    txtEnfermedad.setText(txtEnfermedad.getText().toUpperCase());
    }//GEN-LAST:event_txtEnfermedadKeyReleased

    private void txtNombreR1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreR1KeyReleased
     txtNombreR1.setText(txtNombreR1.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreR1KeyReleased

    private void txtApellidoR1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoR1KeyReleased
    txtApellidoR1.setText(txtApellidoR1.getText().toUpperCase());
    }//GEN-LAST:event_txtApellidoR1KeyReleased

    private void txtOcupacionR1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionR1KeyReleased
    txtOcupacionR1.setText(txtOcupacionR1.getText().toUpperCase());
    }//GEN-LAST:event_txtOcupacionR1KeyReleased

    private void txtEmpresaR1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaR1KeyReleased
    txtEmpresaR1.setText(txtEmpresaR1.getText().toUpperCase());

    }//GEN-LAST:event_txtEmpresaR1KeyReleased

    private void txtTelefonoR1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR1KeyReleased
    txtTelefonoR1.setText(txtTelefonoR1.getText().toUpperCase());

    }//GEN-LAST:event_txtTelefonoR1KeyReleased

    private void txtTelefonoR12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR12KeyReleased
    txtTelefonoR12.setText(txtTelefonoR12.getText().toUpperCase());
    }//GEN-LAST:event_txtTelefonoR12KeyReleased

    private void txtCedulaR2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaR2KeyReleased
    txtCedulaR2.setText(txtCedulaR2.getText().toUpperCase());
    }//GEN-LAST:event_txtCedulaR2KeyReleased

    private void txtCedulaR3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaR3KeyReleased
    txtCedulaR3.setText(txtCedulaR3.getText().toUpperCase());
    }//GEN-LAST:event_txtCedulaR3KeyReleased

    private void txtNombreR2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreR2KeyReleased
    txtNombreR2.setText(txtNombreR2.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreR2KeyReleased

    private void txtNombreR3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreR3KeyReleased
    txtNombreR3.setText(txtNombreR3.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreR3KeyReleased

    private void txtApellidoR2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoR2KeyReleased
    txtApellidoR2.setText(txtApellidoR2.getText().toUpperCase());
    }//GEN-LAST:event_txtApellidoR2KeyReleased

    private void txtApellidoR3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoR3KeyReleased
    txtApellidoR3.setText(txtApellidoR3.getText().toUpperCase());
    }//GEN-LAST:event_txtApellidoR3KeyReleased

    private void txtOcupacionR2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionR2KeyReleased
    txtOcupacionR2.setText(txtOcupacionR2.getText().toUpperCase());
    }//GEN-LAST:event_txtOcupacionR2KeyReleased

    private void txtTelefonoR2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR2KeyReleased
        txtTelefonoR2.setText(txtTelefonoR2.getText().toUpperCase());
    
    }//GEN-LAST:event_txtTelefonoR2KeyReleased

    private void txtEmpresaR2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaR2KeyReleased
        txtEmpresaR2.setText(txtEmpresaR2.getText().toUpperCase());

    }//GEN-LAST:event_txtEmpresaR2KeyReleased

    private void txtTelefonoR22KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR22KeyReleased
     txtTelefonoR22.setText(txtTelefonoR22.getText().toUpperCase());
    }//GEN-LAST:event_txtTelefonoR22KeyReleased

    private void txtOcupacionR3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionR3KeyReleased
    txtOcupacionR3.setText(txtOcupacionR3.getText().toUpperCase());
    }//GEN-LAST:event_txtOcupacionR3KeyReleased

    private void txtTelefonoR3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR3KeyReleased
    txtTelefonoR3.setText(txtTelefonoR3.getText().toUpperCase());
    }//GEN-LAST:event_txtTelefonoR3KeyReleased

    private void txtEmpresaR3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaR3KeyReleased
    txtEmpresaR3.setText(txtEmpresaR3.getText().toUpperCase());
    }//GEN-LAST:event_txtEmpresaR3KeyReleased

    private void txtObservacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObservacionKeyReleased
     txtObservacion.setText(txtObservacion.getText().toUpperCase());
    }//GEN-LAST:event_txtObservacionKeyReleased

    private void txtTelefonoR32KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoR32KeyReleased
     txtTelefonoR32.setText(txtTelefonoR32.getText().toUpperCase());
    }//GEN-LAST:event_txtTelefonoR32KeyReleased

    private void txtParentescoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParentescoKeyReleased
    txtParentesco.setText(txtParentesco.getText().toUpperCase());
    }//GEN-LAST:event_txtParentescoKeyReleased

    private void txtParentescoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParentescoKeyTyped
        validacionSoloLetrasEspacio(evt, 15, txtParentesco.getText().length());
    }//GEN-LAST:event_txtParentescoKeyTyped

    private void cbxParentescoR3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxParentescoR3ActionPerformed
        if (cbxParentescoR3.getSelectedIndex() == 8) {
            txtParentesco.setText("");
            txtParentesco.setEnabled(true);
        }else{
            txtParentesco.setText("");
            txtParentesco.setEnabled(false);
        }
    }//GEN-LAST:event_cbxParentescoR3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmInscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmInscripcion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarImagen;
    private javax.swing.JButton btnAgregarImagen1;
    private javax.swing.JButton btnAgregarImagen2;
    private javax.swing.JButton btnAgregarImagen3;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBorrar1;
    private javax.swing.JButton btnBorrarA;
    private javax.swing.JButton btnBorrarR;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSalir1;
    private javax.swing.JButton btnSalir2;
    private javax.swing.JButton btnSeleccion;
    private javax.swing.JButton btnSeleccion1;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JComboBox<String> cbxCasa;
    private javax.swing.JComboBox<String> cbxEstatus;
    private javax.swing.JComboBox<String> cbxParentescoR1;
    private javax.swing.JComboBox<String> cbxParentescoR2;
    private javax.swing.JComboBox<String> cbxParentescoR3;
    private javax.swing.JComboBox<String> cbxTipoSangre;
    private javax.swing.JCheckBox chkCopiaCedula;
    private javax.swing.JCheckBox chkFotoCarnet;
    private javax.swing.JCheckBox chkFotoFamiliar;
    private javax.swing.JCheckBox chkFotoPostal;
    private javax.swing.JCheckBox chkPartidaNacimiento;
    private javax.swing.JCheckBox chkRepresentante;
    private javax.swing.JFrame frmBusqueda;
    private javax.swing.JFrame frmBusqueda1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lblCodigo;
    public javax.swing.JLabel lblTitulo;
    public javax.swing.JLabel lblUsuarioActvo;
    private javax.swing.JLabel lblfoto;
    private javax.swing.JLabel lblfoto1;
    private javax.swing.JLabel lblfoto2;
    private javax.swing.JLabel lblfoto3;
    private javax.swing.JList<String> listAlergias;
    private javax.swing.JRadioButton rbnANo;
    private javax.swing.JRadioButton rbnASi;
    private javax.swing.JRadioButton rbnFemenino;
    private javax.swing.JRadioButton rbnI;
    private javax.swing.JRadioButton rbnII;
    private javax.swing.JRadioButton rbnIII;
    private javax.swing.JRadioButton rbnMasculino;
    private javax.swing.JRadioButton rbnMaternal;
    private javax.swing.JRadioButton rbnNo;
    private javax.swing.JRadioButton rbnOtro;
    private javax.swing.JRadioButton rbnR1;
    private javax.swing.JRadioButton rbnR2;
    private javax.swing.JRadioButton rbnSi;
    private javax.swing.JTable tblBusqueda;
    private javax.swing.JTable tblBusqueda1;
    private javax.swing.JTextField txtApellidoR1;
    private javax.swing.JTextField txtApellidoR2;
    private javax.swing.JTextField txtApellidoR3;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtBusqueda1;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCedulaR1;
    private javax.swing.JTextField txtCedulaR2;
    private javax.swing.JTextField txtCedulaR3;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtDireccionR1;
    private javax.swing.JTextArea txtDireccionR2;
    private javax.swing.JTextArea txtDireccionR3;
    private javax.swing.JTextField txtEmpresaR1;
    private javax.swing.JTextField txtEmpresaR2;
    private javax.swing.JTextField txtEmpresaR3;
    private javax.swing.JTextArea txtEnfermedad;
    private datechooser.beans.DateChooserCombo txtFecha;
    private javax.swing.JTextField txtNombreR1;
    private javax.swing.JTextField txtNombreR2;
    private javax.swing.JTextField txtNombreR3;
    private javax.swing.JTextField txtNumCasa;
    private javax.swing.JTextArea txtObservacion;
    private javax.swing.JTextField txtOcupacionR1;
    private javax.swing.JTextField txtOcupacionR2;
    private javax.swing.JTextField txtOcupacionR3;
    private javax.swing.JTextField txtPapellido;
    private javax.swing.JTextField txtParentesco;
    private javax.swing.JTextField txtParroquia;
    private javax.swing.JTextField txtPnombre;
    private javax.swing.JTextField txtSapellido;
    private javax.swing.JTextField txtSector;
    private javax.swing.JTextField txtSnombre;
    private javax.swing.JTextField txtTelefonoR1;
    private javax.swing.JTextField txtTelefonoR12;
    private javax.swing.JTextField txtTelefonoR2;
    private javax.swing.JTextField txtTelefonoR22;
    private javax.swing.JTextField txtTelefonoR3;
    private javax.swing.JTextField txtTelefonoR32;
    // End of variables declaration//GEN-END:variables

    public void setCoordinador(Coordinador coordinador) {
        this.coordinador = coordinador;
    }

    private boolean registrarAlumno(String fecha) {
        VO.AlumnoVO alumnoVO = new VO.AlumnoVO();
        alumnoVO.setPrimer_nombre(txtPnombre.getText());
        alumnoVO.setSegundo_nombre(txtSnombre.getText());
        alumnoVO.setPrimer_apellido(txtPapellido.getText());
        alumnoVO.setSegundo_apellido(txtSapellido.getText());
        if (rbnMasculino.isSelected()) {
            alumnoVO.setSexo("masculino");
        } else {
            alumnoVO.setSexo("femenino");
        }
        alumnoVO.setFechaNacimiento(fecha);
        //alumnoVO.setDireccion(txtDireccion.getText());
        alumnoVO.setTipo_sangre(cbxTipoSangre.getSelectedItem().toString());
        if (rbnSi.isSelected()) {
            alumnoVO.setEnfermedades(txtEnfermedad.getText());
        } else {
            alumnoVO.setEnfermedades("NINGUNA");
        }
        alumnoVO.setId_alumno(coordinador.llenarCodigoAlumno(txtCedulaR1.getText()));
        int a√±oNacimiento = Integer.parseInt(txtFecha.getText().substring(6, 10));
        int a√±oActual = Integer.parseInt(coordinador.getFechaFormateada().substring(6, 10));
        alumnoVO.setEdad(a√±oActual - a√±oNacimiento);
        if (!lblfoto.getIcon().equals(ICON_NO_PHOTO)) {
            alumnoVO.setBinarioFoto(longitudBytes);
            alumnoVO.setFis(fis);
        }
        /**
         * Ingreso estatus
         */
        if (cbxEstatus.getSelectedIndex() == 0) {
            alumnoVO.setEstatus(true);
        } else {
            alumnoVO.setEstatus(false);
        }
        /**
         * ingreso de alergias si existe
         */
        if (rbnASi.isSelected()) {
            List<String> lista = listAlergias.getSelectedValuesList();
            String[] vector = new String[lista.size()];
            alumnoVO.setAlergias(vector);
            vector = lista.toArray(vector);
            alumnoVO.setAlergias(vector);
        } else {
            alumnoVO.setAlergias(null);
        }
        String res = coordinador.registrarAlumno(alumnoVO);
        
        /**
         * registro direccion tambien
         */
        DireccionVO direccionVO = new DireccionVO();
        
        direccionVO.setCalle(txtCalle.getText());
        direccionVO.setCasa(cbxCasa.getSelectedItem().toString());
        direccionVO.setId_direccion(lblCodigo.getText());
        direccionVO.setNumcasa(txtNumCasa.getText());
        direccionVO.setParroquia(txtParroquia.getText());
        direccionVO.setSector(txtSector.getText());
        
        res = coordinador.registrarDireccion(direccionVO);
        return res.equals("INGRESADO CON EXITO");
    }

    private boolean validacionCampoAlumno() {
        if (txtPnombre.getText().isEmpty() || txtSnombre.getText().isEmpty() || txtPapellido.getText().isEmpty() || txtSapellido.getText().isEmpty() 
                || txtNumCasa.getText().isEmpty() || txtCalle.getText().isEmpty() || txtSector.getText().isEmpty() || txtParroquia.getText().isEmpty()) {
            return false;
        }
        
        if (rbnSi.isSelected()) {
            if (txtEnfermedad.getText().isEmpty()) {
                return false;
            }
        }
        
         if (rbnASi.isSelected()) {
             List<String> lista = listAlergias.getSelectedValuesList();
            if (lista.isEmpty()) {
                return false;
            }   
         }
         
         return true;
        /*if (rbnSi.isSelected()) {
            if (!txtEnfermedad.getText().isEmpty()) {
                if (!txtPnombre.getText().isEmpty() && !txtSnombre.getText().isEmpty() && !txtPapellido.getText().isEmpty() && !txtSapellido.getText().isEmpty() && !txtDireccion.getText().isEmpty()) {
                    return true;
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            if (!txtPnombre.getText().isEmpty() && !txtSnombre.getText().isEmpty() && !txtPapellido.getText().isEmpty() && !txtSapellido.getText().isEmpty() && !txtDireccion.getText().isEmpty()) {
                return true;
            } else {
                return false;
            }
        }*/
    }

    private boolean validacionCampoRepresentante() {
//        if (chkRepresentante.isSelected()) {
//            return !txtNombreR1.getText().isEmpty() && !txtApellidoR1.getText().isEmpty() && !txtOcupacionR1.getText().isEmpty() && !txtTelefonoR1.getText().isEmpty() && !txtDireccionR1.getText().isEmpty() && !txtCedulaR1.getText().isEmpty()
//                    && !txtNombreR2.getText().isEmpty() && !txtApellidoR2.getText().isEmpty() && !txtOcupacionR2.getText().isEmpty() && !txtTelefonoR2.getText().isEmpty() && !txtDireccionR2.getText().isEmpty() && !txtCedulaR2.getText().isEmpty()
//                    && !txtNombreR3.getText().isEmpty() && !txtApellidoR3.getText().isEmpty() && !txtOcupacionR3.getText().isEmpty() && !txtTelefonoR3.getText().isEmpty() && !txtDireccionR3.getText().isEmpty() && !txtCedulaR3.getText().isEmpty();
//
//        } else {
//            return !txtNombreR1.getText().isEmpty() && !txtApellidoR1.getText().isEmpty() && !txtOcupacionR1.getText().isEmpty() && !txtTelefonoR1.getText().isEmpty() && !txtDireccionR1.getText().isEmpty() && !txtCedulaR1.getText().isEmpty()
//                    && !txtNombreR3.getText().isEmpty() && !txtApellidoR3.getText().isEmpty() && !txtOcupacionR3.getText().isEmpty() && !txtTelefonoR3.getText().isEmpty() && !txtDireccionR3.getText().isEmpty() && !txtCedulaR3.getText().isEmpty();
//        }
    if (chkRepresentante.isSelected()) {
        if (txtNombreR1.getText().isEmpty() || txtApellidoR1.getText().isEmpty() || txtOcupacionR1.getText().isEmpty() || txtTelefonoR1.getText().isEmpty() || txtDireccionR1.getText().isEmpty() || txtCedulaR1.getText().isEmpty()
                   || txtNombreR2.getText().isEmpty() || txtApellidoR2.getText().isEmpty() || txtOcupacionR2.getText().isEmpty() || txtTelefonoR2.getText().isEmpty() || txtDireccionR2.getText().isEmpty() || txtCedulaR2.getText().isEmpty()
                   || txtNombreR3.getText().isEmpty() || txtApellidoR3.getText().isEmpty() || txtOcupacionR3.getText().isEmpty() || txtTelefonoR3.getText().isEmpty() || txtDireccionR3.getText().isEmpty() || txtCedulaR3.getText().isEmpty()) {
            return false;
        }
    }
    
    if (txtNombreR1.getText().isEmpty() || txtApellidoR1.getText().isEmpty() || txtOcupacionR1.getText().isEmpty() || txtTelefonoR1.getText().isEmpty() || txtDireccionR1.getText().isEmpty() || txtCedulaR1.getText().isEmpty()
        || txtNombreR3.getText().isEmpty() || txtApellidoR3.getText().isEmpty() || txtOcupacionR3.getText().isEmpty() || txtTelefonoR3.getText().isEmpty() || txtDireccionR3.getText().isEmpty() || txtCedulaR3.getText().isEmpty()) {
        return false;
    }
    
    if (txtCedulaR1.getText().equals(txtCedulaR2.getText())) {
        return false;
    }
    
    if (cbxParentescoR3.getSelectedIndex() == 8 && txtParentesco.getText().isEmpty()) {
        return false;
    }
    
    return true;
    }

    private boolean registrarRepresentante() {
        VO.RepresentanteVO representanteVO = new VO.RepresentanteVO();

        representanteVO.setPrimer_nombre(txtNombreR1.getText());
        representanteVO.setPrimer_apellido(txtApellidoR1.getText());
        representanteVO.setOcupacion(txtOcupacionR1.getText());
        representanteVO.setEmpresa(txtEmpresaR1.getText());
        representanteVO.setDireccion(txtDireccionR1.getText());
        representanteVO.setTelefono1(txtTelefonoR1.getText());
        representanteVO.setTelefono2(txtTelefonoR12.getText());
        representanteVO.setParentesco(cbxParentescoR1.getSelectedItem().toString());
        representanteVO.setId_alumno(lblCodigo.getText());
        representanteVO.setCedula(txtCedulaR1.getText());
        representanteVO.setTipo(1);
        if (!lblfoto1.getIcon().equals(ICON_NO_PHOTO)) {
            representanteVO.setBinarioFoto(longitudBytes1);
            representanteVO.setFis(fis1);
        }

        String res = coordinador.registrarRepresentante(representanteVO);
        if (res.equals("INGRESADO CON EXITO")) {
            return true;
        } else {
            return false;
        }
    }

    private boolean registrarRepresentante2() {
        VO.RepresentanteVO representanteVO2 = new VO.RepresentanteVO();
        representanteVO2.setPrimer_nombre(txtNombreR2.getText());
        representanteVO2.setPrimer_apellido(txtApellidoR2.getText());
        representanteVO2.setOcupacion(txtOcupacionR2.getText());
        representanteVO2.setEmpresa(txtEmpresaR2.getText());
        representanteVO2.setDireccion(txtDireccionR2.getText());
        representanteVO2.setTelefono1(txtTelefonoR2.getText());
        representanteVO2.setTelefono2(txtTelefonoR22.getText());
        representanteVO2.setParentesco(cbxParentescoR2.getSelectedItem().toString());
        representanteVO2.setId_alumno(lblCodigo.getText());
        representanteVO2.setCedula(txtCedulaR2.getText());
        representanteVO2.setTipo(2);
        if (!lblfoto2.getIcon().equals(ICON_NO_PHOTO)) {
            representanteVO2.setBinarioFoto(longitudBytes2);
            representanteVO2.setFis(fis2);
        }
        String res = coordinador.registrarRepresentante(representanteVO2);
        if (res.equals("INGRESADO CON EXITO")) {
            return true;
        } else {
            return false;
        }
    }
    
    private boolean registrarRepresentante3() {
        VO.RepresentanteVO representanteVO3 = new VO.RepresentanteVO();
        representanteVO3.setPrimer_nombre(txtNombreR3.getText());
        representanteVO3.setPrimer_apellido(txtApellidoR3.getText());
        representanteVO3.setOcupacion(txtOcupacionR3.getText());
        representanteVO3.setEmpresa(txtEmpresaR3.getText());
        representanteVO3.setDireccion(txtDireccionR3.getText());
        representanteVO3.setTelefono1(txtTelefonoR3.getText());
        representanteVO3.setTelefono2(txtTelefonoR32.getText());
        if (cbxParentescoR3.getSelectedIndex() == 8) {
            representanteVO3.setParentesco("Otro:"+txtParentesco.getText());
        }else{
            representanteVO3.setParentesco(cbxParentescoR3.getSelectedItem().toString());
        }
        representanteVO3.setId_alumno(lblCodigo.getText());
        representanteVO3.setCedula(txtCedulaR3.getText());
        representanteVO3.setTipo(3);
        if(rbnR1.isSelected()){
            representanteVO3.setBinarioFoto(longitudBytecopia1);
            representanteVO3.setFis(fisCopia1);
        }
        if(rbnR2.isSelected()){
            representanteVO3.setBinarioFoto(longitudBytecopia2);
            representanteVO3.setFis(fisCopia2);
        }
        if (rbnOtro.isSelected()) {
            if (!lblfoto3.getIcon().equals(ICON_NO_PHOTO)) {
                representanteVO3.setBinarioFoto(longitudBytes3);
                representanteVO3.setFis(fis3);
            }
        }
        String res = coordinador.registrarRepresentante(representanteVO3);
        if (res.equals("INGRESADO CON EXITO")) {
            return true;
        } else {
            return false;
        }
    }

    private void validacionSoloLetras(KeyEvent evt, int maximo, int lim) {
        if (coordinador.validacionSoloLetras(evt.getKeyChar() + "")) {
            if (lim >= maximo) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            evt.consume();
            getToolkit().beep();
        }
    }
    
    private void validacionSoloLetrasEspacio(KeyEvent evt, int maximo, int lim) {
        if (coordinador.validacionSoloLetrasEspacio(evt.getKeyChar() + "")) {
            if (lim >= maximo) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            evt.consume();
            getToolkit().beep();
        }
    }

    private void validacionLimite(KeyEvent evt, int maximo, int lim) {
        if (lim >= maximo) {
            evt.consume();
            getToolkit().beep();
        }
    }

    private void validacionTelefono(KeyEvent evt, int maximo, int lim) {
        if (coordinador.validacionLimiteSoloNumerosYGuion(evt.getKeyChar() + "")) {
            if (lim >= maximo) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            evt.consume();
            getToolkit().beep();
        }
    }

    private void validacionSoloNumeros(KeyEvent evt, int maximo, int lim) {
        if (coordinador.validacionLimiteSoloNumeros(evt.getKeyChar() + "")) {
            if (lim >= maximo) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            evt.consume();
            getToolkit().beep();
        }
    }
    
        private void validacionSoloNumerosYGuion(KeyEvent evt, int maximo, int lim) {
        if (coordinador.validacionLimiteSoloNumerosYGuion(evt.getKeyChar() + "")) {
            if (lim >= maximo) {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            evt.consume();
            getToolkit().beep();
        }
    }

    private void borrarCampos() {
        borrarAlumno();
        lblCodigo.setText("");
        borrarRepresentante();
        borrarRepresentante3();
        activarRepresentante3();
        ACTUALIZACION = false;
    }

    private void desactivarRepresentante() {
        chkRepresentante.setSelected(false);
        cbxParentescoR2.setSelectedIndex(0);
        txtNombreR2.setText("");
        txtApellidoR2.setText("");
        txtOcupacionR2.setText("");
        txtTelefonoR2.setText("");
        txtTelefonoR22.setText("");
        txtEmpresaR2.setText("");
        txtDireccionR2.setText("");
        txtCedulaR2.setText("");
        ajustar(lblfoto2, ICON_NO_PHOTO);

        cbxParentescoR2.setEnabled(false);
        txtNombreR2.setEnabled(false);
        txtApellidoR2.setEnabled(false);
        txtOcupacionR2.setEnabled(false);
        txtTelefonoR2.setEnabled(false);
        txtTelefonoR22.setEnabled(false);
        txtEmpresaR2.setEnabled(false);
        txtDireccionR2.setEnabled(false);
        txtCedulaR2.setEnabled(false);
        btnAgregarImagen2.setEnabled(false);
    }

    private void activarRepresentante() {
        cbxParentescoR2.setEnabled(true);
        txtNombreR2.setEnabled(true);
        txtApellidoR2.setEnabled(true);
        txtOcupacionR2.setEnabled(true);
        txtTelefonoR2.setEnabled(true);
        txtTelefonoR22.setEnabled(true);
        txtEmpresaR2.setEnabled(true);
        txtDireccionR2.setEnabled(true);
        txtCedulaR2.setEnabled(true);
        btnAgregarImagen2.setEnabled(true);
    }

    private boolean registrarMatricula() {
        VO.MatriculaVO matriculaVO = new VO.MatriculaVO();
        matriculaVO.setId_alumno(lblCodigo.getText());
        if (rbnMaternal.isSelected()) {
              matriculaVO.setSeccion(rbnMaternal.getText()); 
           }else if (rbnI.isSelected()) {
              matriculaVO.setSeccion(rbnI.getText()); 
           }else if (rbnII.isSelected()) {
              matriculaVO.setSeccion(rbnII.getText()); 
           }else if (rbnIII.isSelected()) {
              matriculaVO.setSeccion(rbnIII.getText()); 
           }
        matriculaVO.setId_empleado(coordinador.consultarUsuario(lblUsuarioActvo.getText()).getId_usuario());
        matriculaVO.setPeriodo(coordinador.consultarVariables().getPeriodo_actual());
        if (coordinador.registrarMatricula(matriculaVO).equals("INGRESADO CON EXITO")) {
            return true;
        } else {
            return false;
        }
    }

    private boolean registrarRequisitos() {
        VO.RequisitosVO requisitosVO = new VO.RequisitosVO();
        requisitosVO.setId_alumno(lblCodigo.getText());
        requisitosVO.setFoto_carnet(chkFotoCarnet.isSelected());
        requisitosVO.setFoto_familiar(chkFotoFamiliar.isSelected());
        requisitosVO.setFoto_postal(chkFotoPostal.isSelected());
        requisitosVO.setPartida(chkPartidaNacimiento.isSelected());
        requisitosVO.setCedula_padres(chkCopiaCedula.isSelected());
        requisitosVO.setObservaciones(txtObservacion.getText());
        if (coordinador.registrarRequisitos(requisitosVO).equals("INGRESADO CON EXITO")) {
            return true;
        } else {
            return false;
        }
    }

    private void borrarAlumno() {
        txtCodigo.setText("");
        rbnASi.setSelected(false);
        rbnANo.setSelected(true);
        listAlergias.setEnabled(false);
        listAlergias.clearSelection();
        txtPnombre.setText("");
        txtSnombre.setText("");
        txtPapellido.setText("");
        txtSapellido.setText("");
        txtNumCasa.setText("");
        txtCalle.setText("");
        txtSector.setText("");
        txtParroquia.setText("");
        cbxCasa.setSelectedIndex(0);
        cbxTipoSangre.setSelectedIndex(0);
        rbnSi.setSelected(false);
        rbnNo.setSelected(true);
        txtEnfermedad.setText("");
        ajustar(lblfoto, ICON_NO_PHOTO);
        txtEnfermedad.setEnabled(false);
        cbxEstatus.setSelectedIndex(0);
        buttonGroup5.setSelected(rbnMaternal.getModel(), true);
        rbnMaternal.setEnabled(false);
        rbnI.setEnabled(false);
        rbnII.setEnabled(false);
        rbnIII.setEnabled(false);
    }

    private void borrarRepresentante() {
        cbxParentescoR1.setSelectedIndex(0);
        txtNombreR1.setText("");
        txtApellidoR1.setText("");
        txtOcupacionR1.setText("");
        txtTelefonoR1.setText("");
        txtTelefonoR12.setText("");
        txtDireccionR1.setText("");
        txtEmpresaR1.setText("");
        txtCedulaR1.setText("");
        txtObservacion.setText("");
        ajustar(lblfoto1, ICON_NO_PHOTO);
        desactivarRepresentante();
        desactivarRepresentante3();
        borrarRepresentante3();
        chkCopiaCedula.setSelected(false);
        chkFotoCarnet.setSelected(false);
        chkFotoFamiliar.setSelected(false);
        chkFotoPostal.setSelected(false);
        chkPartidaNacimiento.setSelected(false);
    }

    private void copiarDatosR1() {
        fis3 = fis1;
        longitudBytes3 = longitudBytes1;
        txtNombreR3.setText(txtNombreR1.getText());
        txtApellidoR3.setText(txtApellidoR1.getText());
        txtCedulaR3.setText(txtCedulaR1.getText());
        txtCedulaR3.setText(txtCedulaR1.getText());
        txtOcupacionR3.setText(txtOcupacionR1.getText());
        txtTelefonoR3.setText(txtTelefonoR1.getText());
        txtTelefonoR32.setText(txtTelefonoR12.getText());
        txtEmpresaR3.setText(txtEmpresaR1.getText());
        txtDireccionR3.setText(txtDireccionR1.getText());
        ajustar(lblfoto3, (ImageIcon) lblfoto1.getIcon());
        cbxParentescoR3.setSelectedItem(cbxParentescoR1.getSelectedItem());
    }

    private void copiarDatosR2() {
        fis3 = fis2;
        longitudBytes3 = longitudBytes2;
        txtNombreR3.setText(txtNombreR2.getText());
        txtApellidoR3.setText(txtApellidoR2.getText());
        txtCedulaR3.setText(txtCedulaR2.getText());
        txtCedulaR3.setText(txtCedulaR2.getText());
        txtOcupacionR3.setText(txtOcupacionR2.getText());
        txtTelefonoR3.setText(txtTelefonoR2.getText());
        txtTelefonoR32.setText(txtTelefonoR22.getText());
        txtEmpresaR3.setText(txtEmpresaR2.getText());
        txtDireccionR3.setText(txtDireccionR2.getText());
        ajustar(lblfoto3, (ImageIcon) lblfoto2.getIcon());
        cbxParentescoR3.setSelectedItem(cbxParentescoR2.getSelectedItem());
    }

    private void borrarRepresentante3() {
        txtNombreR3.setText("");
        txtApellidoR3.setText("");
        txtCedulaR3.setText("");
        txtCedulaR3.setText("");
        txtOcupacionR3.setText("");
        txtTelefonoR3.setText("");
        txtTelefonoR32.setText("");
        txtEmpresaR3.setText("");
        txtDireccionR3.setText("");
        txtParentesco.setText("");
        txtParentesco.setEnabled(false);
        ajustar(lblfoto3, ICON_NO_PHOTO);
        cbxParentescoR3.setSelectedItem(0);
    }

    private void activarRepresentante3() {
        cbxParentescoR3.setEnabled(true);
        txtNombreR3.setEnabled(true);
        txtApellidoR3.setEnabled(true);
        txtOcupacionR3.setEnabled(true);
        txtTelefonoR3.setEnabled(true);
        txtTelefonoR32.setEnabled(true);
        txtEmpresaR3.setEnabled(true);
        txtDireccionR3.setEnabled(true);
        txtCedulaR3.setEnabled(true);
        btnAgregarImagen3.setEnabled(true);
        rbnOtro.setSelected(true);
    }

    private void desactivarRepresentante3() {
        if (rbnOtro.isSelected()) {
        cbxParentescoR3.setEnabled(true);
        txtNombreR3.setEnabled(true);
        txtApellidoR3.setEnabled(true);
        txtOcupacionR3.setEnabled(true);
        txtTelefonoR3.setEnabled(true);
        txtTelefonoR32.setEnabled(true);
        txtEmpresaR3.setEnabled(true);
        txtDireccionR3.setEnabled(true);
        txtCedulaR3.setEnabled(true);
        btnAgregarImagen3.setEnabled(true);
        } else {
        cbxParentescoR3.setEnabled(false);
        txtNombreR3.setEnabled(false);
        txtApellidoR3.setEnabled(false);
        txtOcupacionR3.setEnabled(false);
        txtTelefonoR3.setEnabled(false);
        txtTelefonoR32.setEnabled(false);
        txtEmpresaR3.setEnabled(false);
        txtDireccionR3.setEnabled(false);
        txtCedulaR3.setEnabled(false);
        btnAgregarImagen3.setEnabled(false);
        }
        
    }

    private void llenarCampos(AlumnoVO alumnoVO) {
        //datos del alumno
                txtCodigo.setText(alumnoVO.getId_alumno());
                txtPnombre.setText(alumnoVO.getPrimer_nombre());
                txtSnombre.setText(alumnoVO.getSegundo_nombre());
                txtPapellido.setText(alumnoVO.getPrimer_apellido());
                txtSapellido.setText(alumnoVO.getSegundo_apellido());
                lblCodigo.setText(alumnoVO.getId_alumno() + "");
                if (alumnoVO.getSexo().equals("femenino")) {
                    rbnFemenino.setSelected(true);
                } else {
                    rbnMasculino.setSelected(true);
                }
                String fecha = alumnoVO.getFechaNacimiento().replace('-', '/');
                txtFecha.setText(fecha);
                cbxTipoSangre.setSelectedItem(alumnoVO.getTipo_sangre());
                if (alumnoVO.getEnfermedades().equals("NINGUNA")) {
                    rbnNo.setSelected(true);
                    txtEnfermedad.setText("");
                    txtEnfermedad.setEnabled(false);
                } else {
                    rbnSi.setSelected(true);
                    txtEnfermedad.setText(alumnoVO.getEnfermedades());
                    txtEnfermedad.setEnabled(true);
                }
                if (alumnoVO.getFoto() == null) {
                    ajustar(lblfoto, ICON_NO_PHOTO);
                } else {
                    ajustar(lblfoto, alumnoVO.getFoto());
                }
                if (alumnoVO.isEstatus()) {
                    cbxEstatus.setSelectedIndex(0);
                } else {
                    cbxEstatus.setSelectedIndex(1);
                }
                /**
                 * lleno lista
                 */
                if (alumnoVO.getAlergias() == null) {
                    rbnASi.setSelected(false);
                    rbnANo.setSelected(true);
                    listAlergias.clearSelection();
                    listAlergias.setEnabled(false);
                } else {
                    listAlergias.setEnabled(true);
                    rbnASi.setSelected(true);
                    rbnANo.setSelected(false);
                    ListModel<String> model = listAlergias.getModel();
                    int indices[] = new int [alumnoVO.getAlergias().length];
                    for (int i = 0; i < alumnoVO.getAlergias().length; i++) {
                        for (int j = 0; j < model.getSize(); j++) {
                            if (alumnoVO.getAlergias()[i].equals(model.getElementAt(j))) {
                                indices[i] = j;
                            } 
                        }
                    }
                    listAlergias.setSelectedIndices(indices);
                }
                //datos de direccion
                DireccionVO direccionVO = coordinador.consultarDireccion(alumnoVO.getId_alumno());
                if (direccionVO.getId_direccion() != null) {
                    txtCalle.setText(direccionVO.getCalle());
                    txtNumCasa.setText(direccionVO.getNumcasa());
                    cbxCasa.setSelectedItem(direccionVO.getCasa());
                    txtParroquia.setText(direccionVO.getParroquia());
                    txtSector.setText(direccionVO.getSector());
                }
                
                //datos del representante 1
                RepresentanteVO representanteVO = coordinador.consultarRepresentantePorAlumno(alumnoVO.getId_alumno(), 1);
                if(representanteVO.getCedula()!=null){
                    txtCedulaR1.setText(representanteVO.getCedula());
                    txtNombreR1.setText(representanteVO.getPrimer_nombre());
                    txtApellidoR1.setText(representanteVO.getPrimer_apellido());
                    txtOcupacionR1.setText(representanteVO.getOcupacion());
                    txtTelefonoR1.setText(representanteVO.getTelefono1());
                    txtTelefonoR12.setText(representanteVO.getTelefono2());
                    txtEmpresaR1.setText(representanteVO.getEmpresa());
                    cbxParentescoR1.setSelectedItem(representanteVO.getParentesco());
                    txtDireccionR1.setText(representanteVO.getDireccion());
                    if (representanteVO.getFoto() == null) {
                        ajustar(lblfoto1, ICON_NO_PHOTO);
                    } else {
                        ajustar(lblfoto1, representanteVO.getFoto());
                    }
                }
                //datos del representante 2
                representanteVO = null;
                representanteVO = coordinador.consultarRepresentantePorAlumno(alumnoVO.getId_alumno(), 2);
                if(representanteVO.getCedula()!=null){
                    activarRepresentante();
                    chkRepresentante.setSelected(true);
                    txtCedulaR2.setText(representanteVO.getCedula());
                    txtNombreR2.setText(representanteVO.getPrimer_nombre());
                    txtApellidoR2.setText(representanteVO.getPrimer_apellido());
                    txtOcupacionR2.setText(representanteVO.getOcupacion());
                    txtTelefonoR2.setText(representanteVO.getTelefono1());
                    txtTelefonoR22.setText(representanteVO.getTelefono2());
                    cbxParentescoR2.setSelectedItem(representanteVO.getParentesco());
                    txtEmpresaR2.setText(representanteVO.getEmpresa());
                    txtDireccionR2.setText(representanteVO.getDireccion());
                    if (representanteVO.getFoto() == null) {
                        ajustar(lblfoto2, ICON_NO_PHOTO);
                    } else {
                        ajustar(lblfoto2, representanteVO.getFoto());
                    }
                }
                
                //datos del representante 3
                representanteVO = null;
                representanteVO = coordinador.consultarRepresentantePorAlumno(alumnoVO.getId_alumno(), 3);
                if(representanteVO.getCedula()!=null){
                    txtCedulaR3.setText(representanteVO.getCedula());
                    txtNombreR3.setText(representanteVO.getPrimer_nombre());
                    txtApellidoR3.setText(representanteVO.getPrimer_apellido());
                    txtOcupacionR3.setText(representanteVO.getOcupacion());
                    txtTelefonoR3.setText(representanteVO.getTelefono1());
                    txtTelefonoR32.setText(representanteVO.getTelefono2());
                    txtEmpresaR3.setText(representanteVO.getEmpresa());
                    txtDireccionR3.setText(representanteVO.getDireccion());
                    if (representanteVO.getParentesco().substring(0, 5).equals("Otro:")) {
                        cbxParentescoR3.setSelectedItem("Otro");
                        txtParentesco.setText(representanteVO.getParentesco().substring(5, representanteVO.getParentesco().length()));
                    }else{
                        cbxParentescoR3.setSelectedItem(representanteVO.getParentesco());
                    }
                    if (representanteVO.getFoto() == null) {
                        ajustar(lblfoto3, ICON_NO_PHOTO);
                    } else {
                        ajustar(lblfoto3, representanteVO.getFoto());
                    }
                }
                
                //datos de requisitos
                VO.RequisitosVO requisitosVO = coordinador.consultarRequisitos(alumnoVO.getId_alumno());
                chkCopiaCedula.setSelected(requisitosVO.isCedula_padres());
                chkFotoCarnet.setSelected(requisitosVO.isFoto_carnet());
                chkFotoFamiliar.setSelected(requisitosVO.isFoto_familiar());
                chkFotoPostal.setSelected(requisitosVO.isFoto_postal());
                chkPartidaNacimiento.setSelected(requisitosVO.isPartida());
                
                //datos de observacion
                txtObservacion.setText(requisitosVO.getObservaciones());
    }

    private void nuevoIngreso(String fecha) {
                //verifico campos alumnos
        if (validacionCampoAlumno()) {
            //verifico campos representates
            if (validacionCampoRepresentante()) {
                //registro los alumnos
                if (registrarAlumno(fecha)) {
                    //registro al primer representante
                    if (registrarRepresentante()) {
                        //combruebo check para revisar si registro al otro representante o no
                        if (chkRepresentante.isSelected()) {
                            if (registrarRepresentante2()) {
                                if (registrarRepresentante3()) {
                                    if (registrarMatricula()) {
                                        if (registrarRequisitos()) {
                                            coordinador.getLogica().mensajeCorrecto("Inscripcion completada");
                                            jTabbedPane1.setSelectedIndex(0);
                                        } else {
                                            coordinador.getLogica().mensajeError("Problemas al registrar requisitos");
                                            
                                        }
                                    } else {
                                        coordinador.getLogica().mensajeError("Problemas al incluir en matricula");
                                    }
                                    borrarCampos();
                                } else {
                                    coordinador.getLogica().mensajeError("problemas al registar representante 3");
                                }                               
                            } else {
                                coordinador.getLogica().mensajeError("problemas al registar representante 2");
                            }
                        } else {
                                if (registrarRepresentante3()) {
                                    if (registrarMatricula()) {
                                        if (registrarRequisitos()) {
                                            coordinador.getLogica().mensajeCorrecto("Inscripcion completada");
                                            jTabbedPane1.setSelectedIndex(0);
                                        } else {
                                            coordinador.getLogica().mensajeError("Problemas al registrar requisitos");
                                        }
                                    } else {
                                        coordinador.getLogica().mensajeError("Problemas al incluir en matricula");
                                    }
                                    borrarCampos();
                                } else {
                                    coordinador.getLogica().mensajeError("problemas al registar representante 3");
                                } 
                        }
                    } else {
                        coordinador.getLogica().mensajeError("problemas al registar representante 1");
                    }
                } else {
                    coordinador.getLogica().mensajeError("problemas al registar alumno");
                }
            } else {
                coordinador.getLogica().mensajeAdvertencia("campos representante vacio o cedula duplicada");
            }
        } else {
           coordinador.getLogica().mensajeAdvertencia("faltan campos en alumnos");
        }
    }

    private void reinscripcion(String fecha) {
        //verifico campos alumnos
        if (validacionCampoAlumno()) {
            //verifico campos representates
            if (validacionCampoRepresentante()) {
                //registro los alumnos
                if (actualizarAlumno(fecha)) {
                    //registro al primer representante
                    if (actualizarRepresentante()) {
                        //combruebo check para revisar si registro al otro representante o no
                        if (chkRepresentante.isSelected()) {
                            if (actualizarRepresentante2()) {
                                if (actualizarRepresentante3()) {
                                    if (actualizarMatricula()) {
                                        if (actualizarRequisitos()) {
                                            coordinador.getLogica().mensajeCorrecto("Inscripcion completada");
                                            jTabbedPane1.setSelectedIndex(0);
                                        } else {
                                            coordinador.getLogica().mensajeError("Problemas al actualizar requisitos");
                                        }
                                    } else {
                                        coordinador.getLogica().mensajeError("Problemas al actualizar en matricula");
                                    }
                                    borrarCampos();
                                } else {
                                    coordinador.getLogica().mensajeError("problemas al actualizar representante 3");
                                }                               
                            } else {
                                coordinador.getLogica().mensajeError("problemas al actualizar representante 2");
                            }
                        } else {
                                if (actualizarRepresentante3()) {
                                    if (actualizarMatricula()) {
                                        if (actualizarRequisitos()) {
                                            coordinador.getLogica().mensajeCorrecto("Inscripcion completada");
                                            jTabbedPane1.setSelectedIndex(0);
                                        } else {
                                            coordinador.getLogica().mensajeError("Problemas al actualizar requisitos");
                                        }
                                    } else {
                                        coordinador.getLogica().mensajeError("Problemas al actualizar en matricula");
                                    }
                                    borrarCampos();
                                } else {
                                    coordinador.getLogica().mensajeError("problemas al actualizar representante 3");
                                } 
                        }
                    } else {
                        coordinador.getLogica().mensajeError("problemas al actualizar representante 1");
                    }
                } else {
                    coordinador.getLogica().mensajeError("problemas al actualizar alumno");
                }
            } else {
                coordinador.getLogica().mensajeAdvertencia("campos representante vacio o cedula duplicada");
            }
        } else {
           coordinador.getLogica().mensajeAdvertencia("faltan campos en alumnos");
        }
    }

    private boolean actualizarAlumno(String fecha) {
        VO.AlumnoVO alumnoVO = new VO.AlumnoVO();
        alumnoVO.setPrimer_nombre(txtPnombre.getText());
        alumnoVO.setSegundo_nombre(txtSnombre.getText());
        alumnoVO.setPrimer_apellido(txtPapellido.getText());
        alumnoVO.setSegundo_apellido(txtSapellido.getText());
        if (rbnMasculino.isSelected()) {
            alumnoVO.setSexo("masculino");
        } else {
            alumnoVO.setSexo("femenino");
        }
        alumnoVO.setFechaNacimiento(fecha);
        //alumnoVO.setDireccion(txtDireccion.getText());
        alumnoVO.setTipo_sangre(cbxTipoSangre.getSelectedItem().toString());
        if (rbnSi.isSelected()) {
            alumnoVO.setEnfermedades(txtEnfermedad.getText());
        } else {
            alumnoVO.setEnfermedades("NINGUNA");
        }
        alumnoVO.setId_alumno(lblCodigo.getText());
        int a√±oNacimiento = Integer.parseInt(txtFecha.getText().substring(6, 10));
        int a√±oActual = Integer.parseInt(coordinador.getFechaFormateada().substring(6, 10));
        alumnoVO.setEdad(a√±oActual - a√±oNacimiento);
        if (!lblfoto.getIcon().equals(ICON_NO_PHOTO)) {
            alumnoVO.setBinarioFoto(longitudBytes);
            alumnoVO.setFis(fis);
        }
        /**
         * Ingreso estatus
         */
        if (cbxEstatus.getSelectedIndex() == 0) {
            alumnoVO.setEstatus(true);
        } else {
            alumnoVO.setEstatus(false);
        }
        /**
         * ingreso de alergias si existe
         */
        if (rbnASi.isSelected()) {
            List<String> lista = listAlergias.getSelectedValuesList();
            String[] vector = new String[lista.size()];
            alumnoVO.setAlergias(vector);
            vector = lista.toArray(vector);
            alumnoVO.setAlergias(vector);
        } else {
            alumnoVO.setAlergias(null);
        }
        String res = coordinador.actualizarAlumno(alumnoVO, alumnoVO.getId_alumno());
        
        /**
         * registro direccion tambien
         */
        DireccionVO direccionVO = new DireccionVO();
        
        direccionVO.setCalle(txtCalle.getText());
        direccionVO.setCasa(cbxCasa.getSelectedItem().toString());
        direccionVO.setId_direccion(lblCodigo.getText());
        direccionVO.setNumcasa(txtNumCasa.getText());
        direccionVO.setParroquia(txtParroquia.getText());
        direccionVO.setSector(txtSector.getText());
        
        res = coordinador.actualizarDireccion(direccionVO, alumnoVO.getId_alumno());
        return res.equals("DATOS ACTUALIZADOS");
    }
    
    private boolean actualizarRepresentante() {
        VO.RepresentanteVO representanteVO = new VO.RepresentanteVO();

        representanteVO.setPrimer_nombre(txtNombreR1.getText());
        representanteVO.setPrimer_apellido(txtApellidoR1.getText());
        representanteVO.setOcupacion(txtOcupacionR1.getText());
        representanteVO.setEmpresa(txtEmpresaR1.getText());
        representanteVO.setDireccion(txtDireccionR1.getText());
        representanteVO.setTelefono1(txtTelefonoR1.getText());
        representanteVO.setTelefono2(txtTelefonoR12.getText());
        representanteVO.setParentesco(cbxParentescoR1.getSelectedItem().toString());
        representanteVO.setId_alumno(lblCodigo.getText());
        representanteVO.setCedula(txtCedulaR1.getText());
        representanteVO.setTipo(1);
        if (!lblfoto1.getIcon().equals(ICON_NO_PHOTO)) {
            representanteVO.setBinarioFoto(longitudBytes1);
            representanteVO.setFis(fis1);
        }

        String res = coordinador.actualizarRepresentante(representanteVO, lblCodigo.getText(), 1);
        if (res.equals("DATOS ACTUALIZADOS")) {
            return true;
        } else {
            return false;
        }
    }
    
    private boolean actualizarRepresentante2() {
        VO.RepresentanteVO representanteVO2 = new VO.RepresentanteVO();
        representanteVO2.setPrimer_nombre(txtNombreR2.getText());
        representanteVO2.setPrimer_apellido(txtApellidoR2.getText());
        representanteVO2.setOcupacion(txtOcupacionR2.getText());
        representanteVO2.setEmpresa(txtEmpresaR2.getText());
        representanteVO2.setDireccion(txtDireccionR2.getText());
        representanteVO2.setTelefono1(txtTelefonoR2.getText());
        representanteVO2.setTelefono2(txtTelefonoR22.getText());
        representanteVO2.setParentesco(cbxParentescoR2.getSelectedItem().toString());
        representanteVO2.setId_alumno(lblCodigo.getText());
        representanteVO2.setCedula(txtCedulaR2.getText());
        representanteVO2.setTipo(2);
        if (!lblfoto2.getIcon().equals(ICON_NO_PHOTO)) {
            representanteVO2.setBinarioFoto(longitudBytes2);
            representanteVO2.setFis(fis2);
        }
        //consulto a ver si existe
        RepresentanteVO repre = coordinador.consultarRepresentante(lblCodigo.getText(), 2);
            if (repre.getCedula() != null) {
                //si existe actualizo
                String res = coordinador.actualizarRepresentante(representanteVO2, lblCodigo.getText(), 2);
                if (res.equals("DATOS ACTUALIZADOS")) {
                    return true;
                } else {
                    return false;
                }
            }else{
                String res = coordinador.registrarRepresentante(representanteVO2);
                if (res.equals("INGRESADO CON EXITO")) {
                    return true;
                } else {
                    return false;
                }
            }
        
    }
    
    private boolean actualizarRepresentante3() {
        VO.RepresentanteVO representanteVO3 = new VO.RepresentanteVO();
        representanteVO3.setPrimer_nombre(txtNombreR3.getText());
        representanteVO3.setPrimer_apellido(txtApellidoR3.getText());
        representanteVO3.setOcupacion(txtOcupacionR3.getText());
        representanteVO3.setEmpresa(txtEmpresaR3.getText());
        representanteVO3.setDireccion(txtDireccionR3.getText());
        representanteVO3.setTelefono1(txtTelefonoR3.getText());
        representanteVO3.setTelefono2(txtTelefonoR32.getText());
            if (cbxParentescoR3.getSelectedIndex() == 8) {
                representanteVO3.setParentesco("Otro:"+txtParentesco.getText());
            }else{
                representanteVO3.setParentesco(cbxParentescoR3.getSelectedItem().toString());
            }
        representanteVO3.setId_alumno(lblCodigo.getText());
        representanteVO3.setCedula(txtCedulaR3.getText());
        representanteVO3.setTipo(3);
        if(rbnR1.isSelected()){
            representanteVO3.setBinarioFoto(longitudBytecopia1);
            representanteVO3.setFis(fisCopia1);
        }
        if(rbnR2.isSelected()){
            representanteVO3.setBinarioFoto(longitudBytecopia2);
            representanteVO3.setFis(fisCopia2);
        }
        if (rbnOtro.isSelected()) {
            if (!lblfoto3.getIcon().equals(ICON_NO_PHOTO)) {
                representanteVO3.setBinarioFoto(longitudBytes3);
                representanteVO3.setFis(fis3);
            }
        }
        String res = coordinador.actualizarRepresentante(representanteVO3, lblCodigo.getText(), 3);
        if (res.equals("DATOS ACTUALIZADOS")) {
            return true;
        } else {
            return false;
        }
    }
    
       private boolean actualizarMatricula() {
        VO.MatriculaVO matriculaVO = new VO.MatriculaVO();
        matriculaVO.setId_alumno(lblCodigo.getText());
           if (rbnMaternal.isSelected()) {
              matriculaVO.setSeccion(rbnMaternal.getText()); 
           }else if (rbnI.isSelected()) {
              matriculaVO.setSeccion(rbnI.getText()); 
           }else if (rbnII.isSelected()) {
              matriculaVO.setSeccion(rbnII.getText()); 
           }else if (rbnIII.isSelected()) {
              matriculaVO.setSeccion(rbnIII.getText()); 
           }
        matriculaVO.setId_empleado(coordinador.consultarUsuario(lblUsuarioActvo.getText()).getId_usuario());
        matriculaVO.setPeriodo(coordinador.consultarVariables().getPeriodo_actual());
        if (coordinador.actualizarMatricula(matriculaVO, lblCodigo.getText()).equals("DATOS ACTUALIZADOS")) {
            return true;
        } else {
            return false;
        }
    }

    private boolean actualizarRequisitos() {
        VO.RequisitosVO requisitosVO = new VO.RequisitosVO();
        requisitosVO.setId_alumno(lblCodigo.getText());
        requisitosVO.setFoto_carnet(chkFotoCarnet.isSelected());
        requisitosVO.setFoto_familiar(chkFotoFamiliar.isSelected());
        requisitosVO.setFoto_postal(chkFotoPostal.isSelected());
        requisitosVO.setPartida(chkPartidaNacimiento.isSelected());
        requisitosVO.setCedula_padres(chkCopiaCedula.isSelected());
        requisitosVO.setObservaciones(txtObservacion.getText());
        if (coordinador.actualizarRequisitos(requisitosVO).equals("DATOS ACTUALIZADOS")) {
            return true;
        } else {
            return false;
        }
    }

    private boolean comprobarEdad() {
                int a√±oNacimiento = Integer.parseInt(txtFecha.getText().substring(6, 10));
        int a√±oActual = Integer.parseInt(coordinador.getFechaFormateada().substring(6, 10));
        int anio = a√±oActual - a√±oNacimiento;
        if (anio < 3) {
            coordinador.getLogica().mensajeError("El alumno no cumple la edad minima de 3 a√±os.");
            return false;
        } 
        if (anio > 6) {
            coordinador.getLogica().mensajeError("El alumno supera la edad maxima, que es 6 a√±os.");
            return false;
        }
        return true;
    }
}
